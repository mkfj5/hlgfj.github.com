WEBVTT
Kind: captions
Language: zh-CN

00:00:00.480 --> 00:00:03.819
还记得我们那个简单的五步孤立棋吗？

00:00:03.819 --> 00:00:05.609
记不记得我们一直搜索到终局？

00:00:05.610 --> 00:00:08.910
我们发现玩家甲总是能赢 除非它起步走到

00:00:08.910 --> 00:00:10.220
中线的某个位置去了

00:00:10.220 --> 00:00:12.070
我知道你要说什么了

00:00:12.070 --> 00:00:15.440
问题就在于评估函数 #my_ moves

00:00:15.439 --> 00:00:19.280
能否预测哪个分支会走向胜局 哪个会走向败局

00:00:19.280 --> 00:00:20.280
对的

00:00:20.280 --> 00:00:23.230
我一直都很喜欢验证我的假设 因为我的假设总是错的

00:00:24.300 --> 00:00:25.864
好吧 这就是那棵极大极小树

00:00:25.864 --> 00:00:30.070
我已经限制了它的深度 只到第三层 并使用了评估函数

00:00:30.070 --> 00:00:33.380
还将值向上传递到极大极小树的顶部

00:00:33.380 --> 00:00:35.109
结果看着还不错

00:00:35.109 --> 00:00:39.939
中线两处位置的分数都是 1 其它分支

00:00:39.939 --> 00:00:42.960
也就是我们知道能赢的那些分支 分数都比较高

00:00:42.960 --> 00:00:44.560
我们来看看另一个例子

00:00:44.560 --> 00:00:46.950
如果还是进行一样的操作

00:00:46.950 --> 00:00:49.810
但假设我们能搜索的深度只到树的第二层呢？

