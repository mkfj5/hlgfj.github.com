WEBVTT
Kind: captions
Language: zh-CN

00:00:00.320 --> 00:00:01.670
什么是迭代加深呢？

00:00:01.669 --> 00:00:04.400
我们先回头看一下问题 如何让计算机

00:00:04.400 --> 00:00:06.530
在两秒内对对手行为作出反应

00:00:06.530 --> 00:00:09.539
我们之前计算了我们认为

00:00:09.539 --> 00:00:10.750
可以在时间限制内搜索到的最大深度

00:00:10.750 --> 00:00:13.759
而用迭代加深 我们要做的事情就更简单了

00:00:13.759 --> 00:00:16.219
我们要搜索第一层 得到答案

00:00:16.219 --> 00:00:18.200
知道目前的最佳走法是什么

00:00:18.199 --> 00:00:20.849
保留这个答案 以防时间耗尽

00:00:20.850 --> 00:00:23.410
然后开始重复操作 但这一次我们会进入第二层

00:00:23.410 --> 00:00:27.059
如果我们在时间耗尽之前完成了第二层的搜索

00:00:27.059 --> 00:00:30.809
那我们就保留目前的最佳走法 再次重复搜索 但这次进入第三层

00:00:30.809 --> 00:00:34.129
如此循环往复 直到时间耗尽为止

00:00:34.130 --> 00:00:35.859
然后将最佳答案返回出来

00:00:35.859 --> 00:00:37.229
所以你是说 我们要做的事

00:00:37.229 --> 00:00:39.529
和确定静止状态要做的一样？

00:00:39.530 --> 00:00:42.570
基本上是一样的 静止不过是良好的副作用

00:00:42.570 --> 00:00:44.619
可这还是回答不了我的问题啊

00:00:44.619 --> 00:00:46.899
这个过程不够高效吧？

00:00:46.899 --> 00:00:50.699
令人惊讶的是 迭代加深浪费不了多少时间

00:00:50.700 --> 00:00:53.200
因为问题涉及指数爆炸

00:00:53.200 --> 00:00:55.890
所以搜索所需时间主要是由搜索的最后一层决定的

