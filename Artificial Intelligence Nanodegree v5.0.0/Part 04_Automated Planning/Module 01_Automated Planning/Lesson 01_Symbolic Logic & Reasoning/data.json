{
  "data": {
    "lesson": {
      "id": 559047,
      "key": "9b5ffa90-4063-4886-890f-893c13c7c077",
      "title": "Symbolic Logic & Reasoning",
      "semantic_type": "Lesson",
      "is_public": true,
      "version": "1.0.0",
      "locale": "en-us",
      "summary": "Peter Norvig returns to explain propositional logic and first-order logic, which provide a symbolic logic framework that enables AI agents to reason about their actions.",
      "lesson_type": "Classroom",
      "display_workspace_project_only": false,
      "resources": {
        "files": [
          {
            "name": "Videos Zip File",
            "uri": "https://zips.udacity-data.com/9b5ffa90-4063-4886-890f-893c13c7c077/559047/1538955335821/Symbolic+Logic+%26+Reasoning+Videos.zip"
          },
          {
            "name": "Transcripts Zip File",
            "uri": "https://zips.udacity-data.com/9b5ffa90-4063-4886-890f-893c13c7c077/559047/1538955322902/Symbolic+Logic+%26+Reasoning+Subtitles.zip"
          }
        ],
        "google_plus_link": null,
        "career_resource_center_link": null,
        "coaching_appointments_link": null,
        "office_hours_link": null,
        "aws_provisioning_link": null
      },
      "project": null,
      "lab": null,
      "concepts": [
        {
          "id": 591150,
          "key": "9eac09a1-74a1-490e-86e0-e8f87b6e600b",
          "title": "Lesson Plan - Week 4",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "9eac09a1-74a1-490e-86e0-e8f87b6e600b",
            "completed_at": "2020-06-01T20:00:00.447Z",
            "last_viewed_at": "2020-06-11T23:04:22.485Z",
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 591154,
              "key": "28adbafc-cae9-4e9d-9e20-eaa380e3cc39",
              "title": "Untitled",
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Lesson Plan: Week 4\n---\n\n## Classroom\n- Watch the lessons on **Symbolic Logic & Reasoning** and **Introduction to Planning**\n- Review the project description for project 2 and plan to start during this week. This project is more difficult than the first project, so looking at it now will help you plan ahead so that you have time to complete the project during week 5.\n\n## Readings\n- Read AIMA **Chapter 9.1-9.2** and **Chapter 10.1**",
              "instructor_notes": ""
            },
            {
              "id": 1078618,
              "key": "ae6bbc2f-e53f-464d-9393-25805b0cfcda",
              "title": "Course Introduction",
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Course Introduction: Advanced Planning\n---\n\nIn the previous course, we learn about an AI agent who can solve problems. The agent utilizes `Search` algorithms to find the goals in state space and `Constraint Satisfaction Problems` algorithms to reduce the exploration in the state space.\n\nIn this Advanced Planning course, we will learn about a `knowledge-based AI agent` who can *reason and plan*. In order to do so, the agent must be able to *store some knowledge and make inferences* to solve a problem based on its knowledge. We will learn how we can use `symbols` to represent problem statements and internal knowledge in the agent’s memory and how the agent can use `logic` to reason and plan about solving the problem.",
              "instructor_notes": ""
            },
            {
              "id": 1078617,
              "key": "4bdb55a8-4138-4482-b7af-c9712b89aba2",
              "title": "Intro to Automated Planning Course",
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2020/September/5f6a3fc0_c4-course-map/c4-course-map.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/4bdb55a8-4138-4482-b7af-c9712b89aba2",
              "caption": "AIND Course Map: Advanced Planning",
              "alt": "",
              "width": 706,
              "height": 475,
              "instructor_notes": null
            }
          ]
        },
        {
          "id": 257323,
          "key": "7dfa5f13-f5cd-480f-92bb-2c7c62d41907",
          "title": "Introduction",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "7dfa5f13-f5cd-480f-92bb-2c7c62d41907",
            "completed_at": "2020-06-11T23:04:26.705Z",
            "last_viewed_at": "2020-06-11T23:04:21.405Z",
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 257324,
              "key": "468c53c3-0051-4db3-82fc-ed4b18ce8983",
              "title": "Introduction",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "qjjW4XOloyc",
                "china_cdn_id": "qjjW4XOloyc.mp4"
              }
            }
          ]
        },
        {
          "id": 257325,
          "key": "5d8b369d-aec0-438d-8c80-dde274a4fc3b",
          "title": "Background and Expert Systems",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "5d8b369d-aec0-438d-8c80-dde274a4fc3b",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 257326,
              "key": "b30b431c-0661-43a5-baa2-2eae0d8e9936",
              "title": "Background and Expert Systems",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "OAYRXkHn9PQ",
                "china_cdn_id": "OAYRXkHn9PQ.mp4"
              }
            }
          ]
        },
        {
          "id": 233068,
          "key": "ef4db6f3-6f76-487f-acd0-dfc2fa0173a5",
          "title": "Propositional Logic",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "ef4db6f3-6f76-487f-acd0-dfc2fa0173a5",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 249212,
              "key": "131604f5-bf7d-4944-9509-9cbd88328348",
              "title": "Propositional Logic",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "WFgIrX49vjI",
                "china_cdn_id": "WFgIrX49vjI.mp4"
              }
            },
            {
              "id": 1078622,
              "key": "ede3646f-b464-4ebf-b441-93555de2bdfc",
              "title": "Propositional Logic",
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "**Propositional Logic** is a simple logic where the _truth of sentences_ is determined. A _*propositional logic sentence*_ is either `true` or `false` with respect to a model of the world. The example of an _*atomic sentence*_ is `P = True` . _*Complex sentences*_ can consists of several atomic sentences connected through parentheses and **logical connectives** (see table below). A _*model*_ is a set of true-false values for all the propositional symbols, for example `model = { B: True, E: False, ... }`.\n\n| Logical Connective | Meaning |\n|--|--|\n| ¬ | NOT |\n| ∧ | AND |\n| ∨ | OR |\n| ⇒ | IMPLY |\n| ⇔ | IF AND ONLY IF |\n\nThe alphabets in the video represent the following atomic sentences:\n- `B` is `true` if there is a burglary and `false` if not.\n- `E` is `true` if there is an earthquake and `false` if not.\n- `A` is `true` if the alarm rings and `false` if not.\n- `M` is `true` if Mary calls and `false` if not.\n- `J` is `true` if Mary calls and `false` if not.\n\nWe can combine these atomic sentences using logical connectives, such as:\n- `(E ∨ B) ⇒ A` means if there is an earthquake *or* a burglary happening, the alarm will trigger.\n- `A ⇒ (J ∧ M)` means if the alarm is triggered, John *and* Mary will call.\n- `J ⇔ M` means John calls *if and only if* Mary calls. In other words, if John calls, Mary will call as well.\n- `J ⇔ ¬M` is the opposite of the above. If John calls, Mary won’t call.\n ",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 233069,
          "key": "d7085c6b-adf3-4937-abe7-2e02c1fc3369",
          "title": "Truth Tables",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "d7085c6b-adf3-4937-abe7-2e02c1fc3369",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 246247,
              "key": "2bf246d0-32dd-4212-8a5b-441e7dd7b736",
              "title": "Truth Tables",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "1irht1fnZ_0",
                "china_cdn_id": "1irht1fnZ_0.mp4"
              }
            },
            {
              "id": 1078628,
              "key": "d891ab3b-e970-4d47-a693-861dff5b407b",
              "title": "Truth Table Quiz",
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "**Truth tables with logical connectives**\n\n| P | Q | ¬P | P ∧ Q | P ∨ Q | P ⇒ Q | P ⇔ Q | \n|---|---|---|---|---|---|---|\n| False | False | True | False | False | True | True |\n| False | True | True | False | True | True | False |\n| True | False | False | False | True | False | False |\n| True | True | False | True | True | True | True |",
              "instructor_notes": ""
            },
            {
              "id": 247711,
              "key": "07a132b4-0c5d-4655-b90f-078419ea44dc",
              "title": "Truth Tables Quiz #1",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "07a132b4-0c5d-4655-b90f-078419ea44dc",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "In terms of formal logic, is the statement O => P, where O is ‘5 is an odd number’ and P is ‘Paris is the capital of France’, true?",
                "answers": [
                  {
                    "id": "rbk1",
                    "text": "Yes, it is true",
                    "is_correct": true
                  },
                  {
                    "id": "rbk2",
                    "text": "No, it is false",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 247712,
              "key": "b272a41d-0ff5-4b0e-8948-0af505488460",
              "title": "Truth Tables Quiz #2",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "b272a41d-0ff5-4b0e-8948-0af505488460",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "In terms of formal logic, is the statement E => M, where E is ‘5 is an even number’ and M is ‘Moscow is the capital of France’, true?",
                "answers": [
                  {
                    "id": "rbk1",
                    "text": "Yes, it is true",
                    "is_correct": true
                  },
                  {
                    "id": "rbk2",
                    "text": "No, it is false",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 246248,
              "key": "905d3361-e001-453d-a124-461f402ee90b",
              "title": "Truth Tables Solution",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "oXnaP65T3Fw",
                "china_cdn_id": "oXnaP65T3Fw.mp4"
              }
            }
          ]
        },
        {
          "id": 233070,
          "key": "2b57ab32-428b-4b4f-94a4-fb6465a8c5fe",
          "title": "Truth Table Question",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "2b57ab32-428b-4b4f-94a4-fb6465a8c5fe",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 246249,
              "key": "1c6c3862-d237-45d4-ae0b-46c3d53b7df2",
              "title": "Truth Table Question",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "Ix8A_0mW6Uw",
                "china_cdn_id": "Ix8A_0mW6Uw.mp4"
              }
            },
            {
              "id": 1078620,
              "key": "99085473-c09f-449f-ab72-eaa434016e8f",
              "title": "Truth Table Question",
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "**Truth tables with logical connectives**\n\n| P | Q | ¬P | P ∧ Q | P ∨ Q | P ⇒ Q | P ⇔ Q | \n|---|---|---|---|---|---|---|\n| False | False | True | False | False | True | True |\n| False | True | True | False | True | True | False |\n| True | False | False | False | True | False | False |\n| True | True | False | True | True | True | True |",
              "instructor_notes": ""
            },
            {
              "id": 252482,
              "key": "288c4c4a-08b5-4a09-bda3-3a7697ff10fb",
              "title": "Truth Table Question #1",
              "semantic_type": "CheckboxQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "288c4c4a-08b5-4a09-bda3-3a7697ff10fb",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "If P is false and Q is false, which of the following statements are true?",
                "answers": [
                  {
                    "id": "rbk1",
                    "text": "P ∧ (P ⇒ Q)",
                    "is_correct": false
                  },
                  {
                    "id": "rbk2",
                    "text": "¬  (¬P ∨ ¬Q)",
                    "is_correct": false
                  },
                  {
                    "id": "rbk3",
                    "text": "(P ∧ (P ⇒ Q)) ⇔ (¬ (¬P ∨ ¬Q))",
                    "is_correct": true
                  },
                  {
                    "id": "rbk4",
                    "text": "None of the above",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 252483,
              "key": "d43a4dd2-f474-4c3a-8525-d0a197fbb6b7",
              "title": "Truth Tables Question #2",
              "semantic_type": "CheckboxQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "d43a4dd2-f474-4c3a-8525-d0a197fbb6b7",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "If P is false and Q is true, which of the following statements are true?",
                "answers": [
                  {
                    "id": "rbk1",
                    "text": "P ∧ (P ⇒ Q)",
                    "is_correct": false
                  },
                  {
                    "id": "rbk2",
                    "text": "¬ (¬P ∨ ¬Q)",
                    "is_correct": false
                  },
                  {
                    "id": "rbk3",
                    "text": "(P ∧ (P ⇒ Q)) ⇔ (¬ (¬P ∨ ¬Q))",
                    "is_correct": true
                  },
                  {
                    "id": "rbk4",
                    "text": "None of the above",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 252484,
              "key": "9f5815e2-d23f-4222-b9e5-1e3f8dab6207",
              "title": "Truth Table Question #3",
              "semantic_type": "CheckboxQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "9f5815e2-d23f-4222-b9e5-1e3f8dab6207",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "If P is true and Q is false, which of the following statements are true?",
                "answers": [
                  {
                    "id": "rbk1",
                    "text": "P ∧ (P ⇒ Q)",
                    "is_correct": false
                  },
                  {
                    "id": "rbk2",
                    "text": "¬ (¬P ∨ ¬Q)",
                    "is_correct": false
                  },
                  {
                    "id": "rbk3",
                    "text": "(P ∧ (P ⇒ Q)) ⇔ (¬ (¬P ∨ ¬Q))",
                    "is_correct": true
                  },
                  {
                    "id": "rbk4",
                    "text": "None of the above",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 252485,
              "key": "5c237430-11cb-4d1b-86c3-f03c6b49d9f0",
              "title": "Truth Tables Question #4",
              "semantic_type": "CheckboxQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "5c237430-11cb-4d1b-86c3-f03c6b49d9f0",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "If P is true and Q is true, which of the following statements are true?",
                "answers": [
                  {
                    "id": "rbk1",
                    "text": "P ∧ (P ⇒ Q)",
                    "is_correct": true
                  },
                  {
                    "id": "rbk2",
                    "text": "¬ (¬P ∨ ¬Q)",
                    "is_correct": true
                  },
                  {
                    "id": "rbk3",
                    "text": "(P ∧ (P ⇒ Q)) ⇔ (¬ (¬P ∨ ¬Q))",
                    "is_correct": true
                  },
                  {
                    "id": "rbk4",
                    "text": "None of the above",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 246250,
              "key": "2e8f9c9f-c69b-4178-97a6-f3e5dc10ea6e",
              "title": "Truth Table Question Solution",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "RzxsZEUFtdI",
                "china_cdn_id": "RzxsZEUFtdI.mp4"
              }
            }
          ]
        },
        {
          "id": 233071,
          "key": "14f8aaa2-2f3f-42f3-8b66-2cf96fc53eec",
          "title": "Propositional Logic Question",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "14f8aaa2-2f3f-42f3-8b66-2cf96fc53eec",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 246251,
              "key": "e2fbb602-3502-4cb8-9207-ab558b67aa31",
              "title": "Propositional Logic Question",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "3rxla6weB40",
                "china_cdn_id": "3rxla6weB40.mp4"
              }
            },
            {
              "id": 252488,
              "key": "acd309b6-392c-46c4-ba6d-ef04ff01d3ac",
              "title": "Propositional Logic Question 1",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "acd309b6-392c-46c4-ba6d-ef04ff01d3ac",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "Given that (E ∨ B) ⇒ A, A ⇒ (J ∧ M), and B are all true statements, what is the value of the variable E?",
                "answers": [
                  {
                    "id": "rbk1",
                    "text": "True",
                    "is_correct": false
                  },
                  {
                    "id": "rbk2",
                    "text": "False",
                    "is_correct": false
                  },
                  {
                    "id": "rbk3",
                    "text": "Cannot be determined",
                    "is_correct": true
                  }
                ]
              }
            },
            {
              "id": 252491,
              "key": "7619413a-d612-44e5-b7ad-81859b03bca2",
              "title": "Propositional Logic Question 2",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "7619413a-d612-44e5-b7ad-81859b03bca2",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": " Given that (E ∨ B) ⇒ A, A ⇒ (J ∧ M), and B are all true statements, what is the value of the variable B?",
                "answers": [
                  {
                    "id": "rbk1",
                    "text": "True",
                    "is_correct": true
                  },
                  {
                    "id": "rbk2",
                    "text": "False",
                    "is_correct": false
                  },
                  {
                    "id": "rbk3",
                    "text": "Cannot be determined",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 252494,
              "key": "b68cab61-96d4-43e8-9dfc-084a541c4259",
              "title": "Propositional Logic Question 3",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "b68cab61-96d4-43e8-9dfc-084a541c4259",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "Given that (E ∨ B) ⇒ A, A ⇒ (J ∧ M), and B are all true statements, what is the value of the variable A?",
                "answers": [
                  {
                    "id": "rbk1",
                    "text": "True",
                    "is_correct": true
                  },
                  {
                    "id": "rbk2",
                    "text": "False",
                    "is_correct": false
                  },
                  {
                    "id": "rbk3",
                    "text": "Cannot be determined",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 252495,
              "key": "ef2aaad2-ca2e-4d0e-a45e-52a7e12bf640",
              "title": "Propositional Logic Question 4",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "ef2aaad2-ca2e-4d0e-a45e-52a7e12bf640",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "Given that (E ∨ B) ⇒ A, A ⇒ (J ∧ M), and B are all true statements, what is the value of the variable J?",
                "answers": [
                  {
                    "id": "rbk1",
                    "text": "True",
                    "is_correct": true
                  },
                  {
                    "id": "rbk2",
                    "text": "False",
                    "is_correct": false
                  },
                  {
                    "id": "rbk3",
                    "text": "Cannot be determined",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 252496,
              "key": "1ad54276-b482-4193-8c3c-d082c275d9eb",
              "title": "Propositional Logic Question 5",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "1ad54276-b482-4193-8c3c-d082c275d9eb",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "Given that (E ∨ B) ⇒ A, A ⇒ (J ∧ M), and B are all true statements, what is the value of the variable M?",
                "answers": [
                  {
                    "id": "rbk1",
                    "text": "True",
                    "is_correct": true
                  },
                  {
                    "id": "rbk2",
                    "text": "False",
                    "is_correct": false
                  },
                  {
                    "id": "rbk3",
                    "text": "Cannot be determined",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 246252,
              "key": "8ec6cc1c-dd07-4498-861d-ffeaf00a3d50",
              "title": "Propositional Logic Question Solution",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "Ixs5ETyQRCs",
                "china_cdn_id": "Ixs5ETyQRCs.mp4"
              }
            }
          ]
        },
        {
          "id": 233072,
          "key": "5eeb1284-61ed-4f99-bdc4-9e2df7d7d982",
          "title": "Terminology",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "5eeb1284-61ed-4f99-bdc4-9e2df7d7d982",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 463195,
              "key": "0d1bbdf1-0e95-4099-bb70-1b52755e6c65",
              "title": "Terminology",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "8EoV-wBqC9c",
                "china_cdn_id": "8EoV-wBqC9c.mp4"
              }
            },
            {
              "id": 1078621,
              "key": "57947702-5e34-4004-929c-5604b693fb0e",
              "title": "Terminology",
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "A **valid** sentence is one that is `true in every possible model` for every combination of values of the propositional symbols, and a **satisfiable** sentence is one that is `true in some model` and not necessarily in all the models. a **unsatisfiable** sentence is one that `cannot be true in every possible model`.",
              "instructor_notes": ""
            },
            {
              "id": 252498,
              "key": "ad30bcba-1725-4388-a09f-aaf904c4e67d",
              "title": "Terminology Question 1",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "ad30bcba-1725-4388-a09f-aaf904c4e67d",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": " Is the following sentence valid, satisfiable, or unsatisfiable? P ∨ ¬P",
                "answers": [
                  {
                    "id": "rbk1",
                    "text": "Valid",
                    "is_correct": true
                  },
                  {
                    "id": "rbk2",
                    "text": "Satisfiable",
                    "is_correct": false
                  },
                  {
                    "id": "rbk3",
                    "text": "Unsatisfiable",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 252499,
              "key": "e7831d5c-bf52-43e0-b821-96afa94cb2f5",
              "title": "Terminology Question 2",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "e7831d5c-bf52-43e0-b821-96afa94cb2f5",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "Is the following sentence valid, satisfiable, or unsatisfiable? P ∧ ¬P",
                "answers": [
                  {
                    "id": "rbk1",
                    "text": "Valid",
                    "is_correct": false
                  },
                  {
                    "id": "rbk2",
                    "text": "Satisfiable",
                    "is_correct": false
                  },
                  {
                    "id": "rbk3",
                    "text": "Unsatisfiable",
                    "is_correct": true
                  }
                ]
              }
            },
            {
              "id": 252501,
              "key": "9e33bf3d-75a6-44ec-b595-9b0e4a929643",
              "title": "Terminology Question 3",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "9e33bf3d-75a6-44ec-b595-9b0e4a929643",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": " Is the following sentence valid, satisfiable, or unsatisfiable? P ∨ Q ∨ (P ⇔ Q)",
                "answers": [
                  {
                    "id": "rbk1",
                    "text": "Valid",
                    "is_correct": true
                  },
                  {
                    "id": "rbk2",
                    "text": "Satisfiable",
                    "is_correct": false
                  },
                  {
                    "id": "rbk3",
                    "text": "Unsatisfiable",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 252504,
              "key": "ceb226d6-3226-492a-916e-133ce4eac01a",
              "title": "Terminology Question 4",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "ceb226d6-3226-492a-916e-133ce4eac01a",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": " Is the following sentence valid, satisfiable, or unsatisfiable? (P ⇒ Q) ∨ (Q ⇒ P)",
                "answers": [
                  {
                    "id": "rbk1",
                    "text": "Valid",
                    "is_correct": true
                  },
                  {
                    "id": "rbk2",
                    "text": "Satisfiable",
                    "is_correct": false
                  },
                  {
                    "id": "rbk3",
                    "text": "Unsatisfiable",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 252506,
              "key": "43176976-58bd-4656-bb6b-db6d07e39611",
              "title": "Terminology Question 5",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "43176976-58bd-4656-bb6b-db6d07e39611",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "Is the following sentence valid, satisfiable, or unsatisfiable? ((Food ⇒ Party) ∨ (Drinks ⇒ Party)) ⇒ ((Food ∧ Drinks) ⇒ Party)",
                "answers": [
                  {
                    "id": "rbk1",
                    "text": "Valid",
                    "is_correct": true
                  },
                  {
                    "id": "rbk2",
                    "text": "Satisfiable",
                    "is_correct": false
                  },
                  {
                    "id": "rbk3",
                    "text": "Unsatisfiable",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 463196,
              "key": "e0d56070-f920-4730-b733-342c91622903",
              "title": "Terminology Solution",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "1gKn-Ovuiu0",
                "china_cdn_id": "1gKn-Ovuiu0.mp4"
              }
            }
          ]
        },
        {
          "id": 233073,
          "key": "ec5d9dfa-4e09-45c8-9d2f-d1c143874472",
          "title": "Propositional Logic Limitations",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "ec5d9dfa-4e09-45c8-9d2f-d1c143874472",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 246255,
              "key": "319a2ecd-a31b-4014-bbb5-04ea27d6b834",
              "title": "Propositional Logic Limitations",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "33aEJGHoC8s",
                "china_cdn_id": "33aEJGHoC8s.mp4"
              }
            },
            {
              "id": 1078625,
              "key": "1a3c8de4-5a14-4341-9828-0bfb143137b6",
              "title": "Propositional Logic Limitations",
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "Propositional logic has a few limitations as follows\n - It can only handle `boolean` value (ie. true or false) and does not have a capability to handle complex values, such as uncertainty (probability value).\n - It can't include `objects` that have properties, such as size, weight, color, nor shows the `relationship` between objects.\n - There are no `shortcuts` to succinctly talk about a lot of different things happening.\n \nIn the following lesson, we will next cover `First Order Logic`, which addresses these two limitations.",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 233074,
          "key": "2b1ebd18-3dc1-4c5f-a350-adc614d5d798",
          "title": "First Order Logic",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "2b1ebd18-3dc1-4c5f-a350-adc614d5d798",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 246287,
              "key": "ff0b4ffb-c8ea-4d26-a710-d64a476eb96a",
              "title": "First Order Logic",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "tSKZmDCUzLs",
                "china_cdn_id": "tSKZmDCUzLs.mp4"
              }
            },
            {
              "id": 1078619,
              "key": "27ca2c9d-2c23-402a-bdbd-42f17f3e6a9c",
              "title": "First Order Logic",
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "**First Order Logic** (FOL) is built around two elements:\n- `objects`: are the noun phrases that refer to things, such as a house, a person, an event.\n- `relations`: are the verb phrases among the objects. The relations can be a `property`, such as \"the car is red\", or a `function`, which maps the input to an output, such as \"times two\".\n\nFOL expresses the facts about some or all of the objects in the world. It represents the general laws or rules. For example, in this sentence of \"Peter Norvig wrote the best Artificial Intelligence textbook\", the `objects` are \"Peter Norvig\" and \"textbook\", the `property` are \"the best\" and \"Artificial Intelligence\", and the `relation` is \"wrote\".\n\nFOL may remind you of the Object-Oriented Programming (OOP). Similar to FOL, OOP is a programming paradigm around `objects`, rather than functions or logics. Both FOL and OOP objects can have `properties` and `functions` (or methods). FOL, however, is different from OOP, in which FOL has a _*declarative*_ nature that separates the knowledge of the world and their inferences. The other difference is that OOP lacks the expressiveness required to handle partial information, such as `if x is in loc A, then it is not in loc B.`",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 233075,
          "key": "714aad3d-c05d-45e8-af26-778827ac8392",
          "title": "Models",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "714aad3d-c05d-45e8-af26-778827ac8392",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 246288,
              "key": "fb56b976-5882-4cac-953c-7790d14d2c85",
              "title": "Models",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "Js7PDwFMGvs",
                "china_cdn_id": "Js7PDwFMGvs.mp4"
              }
            },
            {
              "id": 1078624,
              "key": "add40519-c193-4f2a-a0e2-3be1e7fb53c2",
              "title": "Models",
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "The model in First Order Logic can process more complex representations than that in Propositional Logic. \n\n - In the Propositional Logic, a model is a `set` of objects with boolean values, such as `pl_model = { P: true, Q: false, ... }`.\n - Whereas, in the First Order Logic, a model is a `set of tuples` and can consist of the properties or functional relationship of the objects, such as `fol_model = { Write(Author(Peter), Book(AI textbook)) }`.",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 233076,
          "key": "c3b3dca0-2480-4b46-accc-7030b8e9caef",
          "title": "Syntax",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "c3b3dca0-2480-4b46-accc-7030b8e9caef",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 246289,
              "key": "417cfcc2-05e9-430d-a071-912bff0893bf",
              "title": "Syntax",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "YoCTYife5DE",
                "china_cdn_id": "YoCTYife5DE.mp4"
              }
            },
            {
              "id": 1078623,
              "key": "84318c22-b861-4f2a-9da6-e544e24bc0f0",
              "title": "Syntax",
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "Similar to Propositional Logic, First Order Logic also has five _*logical connectives*_ as follows:\n\n| Logical Connective | Meaning |\n|---|---|\n| ¬ | NOT |\n| ∧ | AND |\n| ∨ | OR |\n| ⇒ | IMPLY |\n| ⇔ | IF AND ONLY IF |\n\nHowever, FOL can also express the property of `a collection of objects`, known as `quantifiers`. There are two standard  quantifiers:\n\n - **Universal quantification** (∀): we can interpret universal quantification as `For all x, ...`.  For example, `∀x Bird(x) ⇒ Animal(x)` means \"all birds are animal.\"\n - **Existential quantification** (∃): we can interpret existential quantification as `For some x, ...`. For example, `∃x Car(x) ∧ Color(x,red)` means \"there exists some cars with red color\".\n\nNotes:\n- `⇒` is a natural connective with `∀` quantification, and\n- `∧` is a natural connective with `∃` quantification.\t",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 233077,
          "key": "b41980b3-1be2-45d4-9de8-571e5fa7d203",
          "title": "Vacuum World",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "b41980b3-1be2-45d4-9de8-571e5fa7d203",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 246290,
              "key": "03c8be01-58eb-45ea-b499-569b160ead11",
              "title": "Vacuum World",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "1oyaltpn6HI",
                "china_cdn_id": "1oyaltpn6HI.mp4"
              }
            }
          ]
        },
        {
          "id": 233078,
          "key": "b16ad05c-5f8b-4978-9e02-884001674bc0",
          "title": "FOL Question",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "b16ad05c-5f8b-4978-9e02-884001674bc0",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 246291,
              "key": "0deab455-50d8-4a9f-8988-f6ff2b634249",
              "title": "FOL Question",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "Y-ZtqiHchyM",
                "china_cdn_id": "Y-ZtqiHchyM.mp4"
              }
            },
            {
              "id": 252530,
              "key": "646016c8-f46e-40d1-aa8c-8e0e50f8f706",
              "title": "FOL Question 1",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "646016c8-f46e-40d1-aa8c-8e0e50f8f706",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "Is the following sentence valid, satisfiable, or unsatisfiable?  ∃x, y: x = y\nType: Multiple Choice",
                "answers": [
                  {
                    "id": "rbk1",
                    "text": "Valid",
                    "is_correct": true
                  },
                  {
                    "id": "rbk2",
                    "text": "Satisfiable",
                    "is_correct": false
                  },
                  {
                    "id": "rbk3",
                    "text": "Unsatisfiable",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 252531,
              "key": "24eb86eb-c4c4-414e-9b24-ccec084a2e90",
              "title": "FOL Quiz 2",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "24eb86eb-c4c4-414e-9b24-ccec084a2e90",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "Is the following sentence valid, satisfiable, or unsatisfiable?  (∃x: x = x) ⇒ (∀y ∃z: y = z)",
                "answers": [
                  {
                    "id": "rbk1",
                    "text": "Valid",
                    "is_correct": true
                  },
                  {
                    "id": "rbk2",
                    "text": "Satisfiable",
                    "is_correct": false
                  },
                  {
                    "id": "rbk3",
                    "text": "Unsatisfiable",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 252532,
              "key": "7c06f4dd-da38-4feb-aa1d-7d76c415a3a5",
              "title": "FOL Question 3",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "7c06f4dd-da38-4feb-aa1d-7d76c415a3a5",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "Is the following sentence valid, satisfiable, or unsatisfiable?  ∀x: P(x) ∨ ¬ P(x)",
                "answers": [
                  {
                    "id": "rbk1",
                    "text": "Valid",
                    "is_correct": true
                  },
                  {
                    "id": "rbk2",
                    "text": "Satisfiable",
                    "is_correct": false
                  },
                  {
                    "id": "rbk3",
                    "text": "Unsatisfiable",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 252533,
              "key": "0b9d096b-93cf-4b83-aec8-a2f80c98c436",
              "title": "FOL Question 4",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "0b9d096b-93cf-4b83-aec8-a2f80c98c436",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "Is the following sentence valid, satisfiable, or unsatisfiable?  ∃x: P(x)\n",
                "answers": [
                  {
                    "id": "rbk1",
                    "text": "Valid",
                    "is_correct": false
                  },
                  {
                    "id": "rbk2",
                    "text": "Satisfiable",
                    "is_correct": true
                  },
                  {
                    "id": "rbk3",
                    "text": "Unsatisfiable",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 246292,
              "key": "6cfa197f-4776-47c1-8d49-1850c8363e67",
              "title": "FOL Question Solution",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "1-cvVrjKoNY",
                "china_cdn_id": "1-cvVrjKoNY.mp4"
              }
            }
          ]
        },
        {
          "id": 233079,
          "key": "d58213a2-cc24-49d0-876c-437aecefd1a9",
          "title": "FOL Question 2",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "d58213a2-cc24-49d0-876c-437aecefd1a9",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 246293,
              "key": "74db8feb-7cd9-404c-a630-5b16f64e45d8",
              "title": "FOL Question 2",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "8e0LIXps-tU",
                "china_cdn_id": "8e0LIXps-tU.mp4"
              }
            },
            {
              "id": 252534,
              "key": "47a91dec-e72d-4a8f-96f6-ea7047365b0b",
              "title": "FOL Question 2 Part 1",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "47a91dec-e72d-4a8f-96f6-ea7047365b0b",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "Is the following first-order logic sentence a good representation of the English language sentence, “Sam has two jobs”? \n\n∃x, y: Job(Sam, x) ∧ Job(Sam, y) ∧ ¬(x = y)",
                "answers": [
                  {
                    "id": "rbk1",
                    "text": "Yes",
                    "is_correct": true
                  },
                  {
                    "id": "rbk2",
                    "text": "No",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 252536,
              "key": "c7ff79e6-687d-4cff-afe4-d70d83e217e0",
              "title": "FOL Question 2 Part 2",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "c7ff79e6-687d-4cff-afe4-d70d83e217e0",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "Are the following first-order logic sentences a good representation of the concept of set membership? \n\n∀x, s: Member(x, Add(x, s))    ∀x, s: Member(x, s) ⇒ (∀y: Member(x, Add(y, s)))",
                "answers": [
                  {
                    "id": "rbk1",
                    "text": "Yes",
                    "is_correct": false
                  },
                  {
                    "id": "rbk2",
                    "text": "No",
                    "is_correct": true
                  }
                ]
              }
            },
            {
              "id": 252538,
              "key": "0bcb4117-906d-4a7f-9a82-aeb857086096",
              "title": "FOL Question 2 Part 3",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "0bcb4117-906d-4a7f-9a82-aeb857086096",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "Is the following first-order logic sentence a good representation of the concept of adjacent squares on a chessboard? \n\n∀x, y: Adj(sq(x, y), sq(+(x, 1), y)) ∧ Adj(sq(x, y), sq(x, +(y, 1))",
                "answers": [
                  {
                    "id": "rbk1",
                    "text": "Yes",
                    "is_correct": false
                  },
                  {
                    "id": "rbk2",
                    "text": "No",
                    "is_correct": true
                  }
                ]
              }
            },
            {
              "id": 246294,
              "key": "73487af9-ab5e-4a77-905f-71379756bb6e",
              "title": "FOL Question Solution 2",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "py1Nvzip3p8",
                "china_cdn_id": "py1Nvzip3p8.mp4"
              }
            }
          ]
        },
        {
          "id": 1078627,
          "key": "c718c70c-3b70-42a7-b02d-2925e30157fc",
          "title": "Recap",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "c718c70c-3b70-42a7-b02d-2925e30157fc",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 1078626,
              "key": "0db4c76b-80ff-4470-b5c3-564d18e3028c",
              "title": "Recap",
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "This course introduces a knowledge-based AI agent who can reason and plan. This lesson shows how to use symbols to represent logic and reasoning. Before we move on to the next lesson on the introduction to planning, let's recap what we have learned in this lesson.\n\nAs we have seen in the previous course, a problem-solving AI agent does not store knowledge about the world. The agent relies on the algorithms, such as Constraint Satisfaction Problem and Search, to find the solutions in state space. A knowledge-based AI agent, however, has full or partial knowledge about the world and can make inferences from the knowledge.\n\nFor a knowledge-based AI agent to be able to reason and plan, they must apply logic to the knowledge about the world. The simplest form of logic is `Propositional Logic`. Propositional logic is the simplest language consisting of symbols and logical connectives. But it can only handle boolean propositions, which are True, False or Unknown.\n\nWe moved on to learn `First Order Logic`, which can help the knowledge-based agents to learn about the knowledge of the world through the more powerful knowledge representations. FOL is built around objects and relations. It also has universal and existential quantifiers to construct assertions about all or some of the possible values of the quantified variables.\n\nIn the next lesson, we will learn how to define problems so our knowledge-based AI agents can plan to solve the problems through explicit propositional and relations between states and actions.",
              "instructor_notes": ""
            }
          ]
        }
      ]
    }
  },
  "_deprecated": [
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    }
  ]
}