WEBVTT
Kind: captions
Language: zh-CN

00:00:00.470 --> 00:00:04.089
对于所有来面试的人工智能研究员 我都会问一个问题

00:00:04.089 --> 00:00:07.419
你对人工智能的定义是什么？

00:00:07.419 --> 00:00:10.310
对我而言 人工智能就是给计算机编程 让其做正确的事情

00:00:10.310 --> 00:00:12.810
哪怕你自己并不确定这正确的事是什么

00:00:12.810 --> 00:00:16.335
那么 Peter 你撰写了史上使用最广的人工智能教科书

00:00:16.335 --> 00:00:20.600
你能跟我们说说写书的过程以及这本书为什么能大获成功吗？

00:00:20.600 --> 00:00:24.480
在 1990 年左右 我还记得在伯克利

00:00:24.480 --> 00:00:26.323
我和那里的教职员总是一起吃午饭

00:00:26.323 --> 00:00:29.957
我们对当时市面上没有一本教科书

00:00:29.957 --> 00:00:31.719
符合我们的需求而感到可惜

00:00:31.719 --> 00:00:35.009
所以我们说要自己写本新的教科书 但是没有写成

00:00:35.009 --> 00:00:36.150
我离开了伯克利

00:00:36.151 --> 00:00:39.260
进入了业内 一开始我去了太阳微系统公司

00:00:39.259 --> 00:00:42.049
大概一年后 我在一次会议上遇见了 Stuart Russel

00:00:42.049 --> 00:00:42.793
我就说

00:00:42.793 --> 00:00:46.339
你们肯定快写好当时老说的那本书了吧

00:00:46.340 --> 00:00:48.070
他说没有 他们什么都没写

00:00:48.070 --> 00:00:52.640
我说那我们两个来写吧 于是我们就动手了

00:00:52.640 --> 00:00:56.920
我觉得这本书的成功是时运使然

00:00:56.920 --> 00:00:59.818
我们恰好撞上了

00:00:59.817 --> 00:01:02.646
人工智能从布尔逻辑过渡到概率学的时期

00:01:02.646 --> 00:01:05.829
也是从手工知识到机器学习的过渡期

00:01:05.829 --> 00:01:06.138
所以

00:01:06.138 --> 00:01:10.640
我们抓住这一点 将其与书中内容结合起来 这是之前的教科书都没有的

00:01:10.640 --> 00:01:15.018
你那人工智能入门课的学员超过了 16 万

00:01:15.018 --> 00:01:17.138
也促成了优达学城

00:01:17.138 --> 00:01:20.500
是什么促使你和 Sebastian 决定开办这门课程的？

00:01:20.500 --> 00:01:24.605
2010 年 我们在斯坦福上了这门人工智能入门课

00:01:24.605 --> 00:01:27.365
那是学校的一门常规课程

00:01:27.364 --> 00:01:30.584
然后在 2011 年的冬天 我想他们应该是找不到其他人来教这门课吧

00:01:30.584 --> 00:01:34.974
所以他们让我们再上一次 我们同意了

00:01:34.974 --> 00:01:36.474
但既然之前已经上过了这门课

00:01:36.474 --> 00:01:38.894
我们决定这次要来点不同的

00:01:38.894 --> 00:01:42.429
Sebastian 建议让课程面向全世界

00:01:42.430 --> 00:01:44.260
我觉得这是个好主意

00:01:44.260 --> 00:01:46.930
或许我们能收获一千个注册学员呢

00:01:46.930 --> 00:01:49.891
结果多了两个数量级

00:01:49.891 --> 00:01:50.615
哇

00:01:50.614 --> 00:01:53.620
早期在谷歌任职搜索质量经理的时候

00:01:53.620 --> 00:01:54.810
你学到了些什么？

00:01:55.810 --> 00:01:58.590
我觉得自己学到的最重要一点是 关注数据

00:01:58.590 --> 00:02:02.510
了解外面有什么 知道你自己在做什么、做得怎么样

00:02:02.510 --> 00:02:05.060
不断尝试并衡量自己做事的水平

00:02:05.060 --> 00:02:07.269
这样你就能进步

00:02:07.269 --> 00:02:09.549
第二是关注人

00:02:09.550 --> 00:02:12.650
我觉得我们打造了个很高质的搜索引擎

00:02:12.650 --> 00:02:15.590
但归根结底与吸引优秀人群

00:02:15.590 --> 00:02:16.950
让他们开心、高产分不开

00:02:16.949 --> 00:02:20.669
那么 Peter 我们都喜欢 LISP 这种编程语言

00:02:20.669 --> 00:02:22.030
你觉得是什么让它与众不同呢？

00:02:23.409 --> 00:02:26.859
我觉得时至今日 LISP 已经不再特殊了

00:02:26.860 --> 00:02:29.000
但对我而言 这意味着 LISP 大获成功

00:02:29.000 --> 00:02:32.960
因为它影响了其它所有语言 让其它语言都采用了 LISP 的关键特征

00:02:32.960 --> 00:02:33.920
比如说

00:02:33.919 --> 00:02:38.795
丰富的数据类型、读取-求值-输出循环、

00:02:38.795 --> 00:02:43.334
调试运行程序的理念、可轻松检查数据的功能、

00:02:43.334 --> 00:02:47.563
它的诸多函数偏好 其中很多函数还没有副作用、

00:02:47.562 --> 00:02:51.149
面向对象、如果需要还能继承

00:02:51.150 --> 00:02:55.950
这些特质曾经都独属于 LISP 但现在大多数语言都有

00:02:55.949 --> 00:02:59.030
我觉得其它语言还没有引进的一点

00:02:59.030 --> 00:03:01.310
是强大的宏定义能力

00:03:01.310 --> 00:03:03.814
有些语言也能定义宏 但能力有限

00:03:03.814 --> 00:03:06.039
可 LISP 能做的就多了

00:03:06.039 --> 00:03:08.629
不过它还没有转变成当代的数据语言

00:03:08.629 --> 00:03:11.829
所以我们第一次探讨我要怎么准备这堂课时 你说服我

00:03:11.830 --> 00:03:15.910
在作业里使用 Python 我那个时候还不知道这门语言呢

00:03:15.909 --> 00:03:19.247
为什么你觉得 Python 有利于这门课呢？

00:03:19.247 --> 00:03:21.989
当我和 Stuart 在写那本书时 我们不想强迫

00:03:21.990 --> 00:03:24.810
读者或讲师使用特定的编程语言

00:03:24.810 --> 00:03:27.990
所以书里的算法用的都是伪代码

00:03:27.990 --> 00:03:31.540
我们确定了代码格式 然后在网上

00:03:31.539 --> 00:03:32.269
提供 LISP 的代码实现版本

00:03:33.669 --> 00:03:36.043
慢慢地 知道 LISP 的学员越来越少

00:03:36.044 --> 00:03:38.651
所以我决定用一种编程语言来重写代码

00:03:38.651 --> 00:03:42.560
我想找一种尽可能接近伪代码的语言

00:03:42.560 --> 00:03:45.990
要足够流行 那样知道它的学员才多

00:03:45.990 --> 00:03:48.046
又要足够简单 那样就算学员不懂得这门语言

00:03:48.045 --> 00:03:50.489
也能够很快理解并将它学起来

00:03:50.490 --> 00:03:52.840
所以我对所有语言进行了一番调查

00:03:52.840 --> 00:03:56.080
发现 Python 似乎是目前的最佳选择

00:03:56.080 --> 00:04:00.230
而不知道为何 Guido 和我们不谋而合

00:04:00.229 --> 00:04:02.930
我们想用一门语言代替伪代码 这种考虑

00:04:02.931 --> 00:04:05.230
多多少少和他想的一样

00:04:05.229 --> 00:04:06.590
所以最后我们就用 Python 了

00:04:06.590 --> 00:04:07.319
好极了 谢谢

