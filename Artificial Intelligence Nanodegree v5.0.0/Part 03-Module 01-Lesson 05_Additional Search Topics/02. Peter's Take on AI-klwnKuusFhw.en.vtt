WEBVTT
Kind: captions
Language: en

00:00:00.470 --> 00:00:04.089
I've been asking this question of
all the AI researchers I interview.

00:00:04.089 --> 00:00:07.419
What is your definition of
artificial intelligence?

00:00:07.419 --> 00:00:10.310
&gt;&gt; To me, AI is programming
a computer to do the right thing

00:00:10.310 --> 00:00:12.810
when you don't know for
sure what the right thing is.

00:00:12.810 --> 00:00:16.335
&gt;&gt; So Peter, you've written the most
widely used AI textbook in history.

00:00:16.335 --> 00:00:20.600
Can you tell us about that process and
what led to its success?

00:00:20.600 --> 00:00:24.480
Well, around 1990,
I remember the AI faculty at Berkeley,

00:00:24.480 --> 00:00:26.323
we all went to lunch together.

00:00:26.323 --> 00:00:29.957
And we were lamenting that none of the
textbooks available at that time were

00:00:29.957 --> 00:00:31.719
quite what we wanted.

00:00:31.719 --> 00:00:35.009
And we should write a new text,
we said, but it didn't happen.

00:00:35.009 --> 00:00:36.150
I ended up leaving Berkeley,

00:00:36.151 --> 00:00:39.260
and I went into industry,
first with Sun Microsystems.

00:00:39.259 --> 00:00:42.049
About a year later,
I saw Stuart Russell at a conference.

00:00:42.049 --> 00:00:42.793
And I said, well,

00:00:42.793 --> 00:00:46.339
you guys must be almost done with that
book you were always talking about.

00:00:46.340 --> 00:00:48.070
And he said, no,
they hadn't done anything.

00:00:48.070 --> 00:00:52.640
So I said, well, the two of us should
just go ahead and do it, and we did.

00:00:52.640 --> 00:00:56.920
I think the book was successful because
of a fortuitous accident of timing.

00:00:56.920 --> 00:00:59.818
We happened to come along
just as AI was making this

00:00:59.817 --> 00:01:02.646
transition from Boolean
logic to probability,

00:01:02.646 --> 00:01:05.829
and from handcrafted knowledge
to machine learning.

00:01:05.829 --> 00:01:06.138
And so

00:01:06.138 --> 00:01:10.640
we were able to capture that in our book
in a way that wasn't in previous books.

00:01:10.640 --> 00:01:15.018
&gt;&gt; Your intro to AI course has
had over 160,000 students, and

00:01:15.018 --> 00:01:17.138
led to the founding of Udacity.

00:01:17.138 --> 00:01:20.500
Why did you and Sebastian decide to
do the course in the first place?

00:01:20.500 --> 00:01:24.605
&gt;&gt; Well, we taught the intro to
AI course at Stanford in 2010,

00:01:24.605 --> 00:01:27.365
a regular course in the classroom.

00:01:27.364 --> 00:01:30.584
And then in winter 2011, I guess
they couldn't come up with anyone

00:01:30.584 --> 00:01:34.974
else to teach the course, so they asked
us to do it again, and we agreed.

00:01:34.974 --> 00:01:36.474
But since we had just done it,

00:01:36.474 --> 00:01:38.894
we decided we wanted to do
something different this time.

00:01:38.894 --> 00:01:42.429
And Sebastian suggested opening
the course up to the world.

00:01:42.430 --> 00:01:44.260
I thought, that's a great idea.

00:01:44.260 --> 00:01:46.930
Maybe we might get 1,000
students to sign up.

00:01:46.930 --> 00:01:49.891
Well, I was off by two
orders of magnitude.

00:01:49.891 --> 00:01:50.615
&gt;&gt; Wow.

00:01:50.614 --> 00:01:53.620
What lessons did you learn from
being the head of search quality for

00:01:53.620 --> 00:01:54.810
Google in the early days?

00:01:55.810 --> 00:01:58.590
&gt;&gt; I think one important lesson is,
pay attention to the data.

00:01:58.590 --> 00:02:02.510
Understand what's out there, what you're
doing, and how well you're doing.

00:02:02.510 --> 00:02:05.060
Keep experimenting and
measuring how well you're doing,

00:02:05.060 --> 00:02:07.269
and that way, you can improve.

00:02:07.269 --> 00:02:09.549
And two, pay attention to people.

00:02:09.550 --> 00:02:12.650
I think we did a good job at building
a high-quality search engine.

00:02:12.650 --> 00:02:15.590
But it all comes down to having great
people and keeping them happy and

00:02:15.590 --> 00:02:16.950
productive.

00:02:16.949 --> 00:02:20.669
&gt;&gt; So Peter, we both love Lisp
as a programming language.

00:02:20.669 --> 00:02:22.030
What do you think that makes it special?

00:02:23.409 --> 00:02:26.859
&gt;&gt; I would say that today,
Lisp is no longer really special.

00:02:26.860 --> 00:02:29.000
But to me, that means that Lisp won.

00:02:29.000 --> 00:02:32.960
It influenced all these other languages
into adopting the key features.

00:02:32.960 --> 00:02:33.920
What things are they?

00:02:33.919 --> 00:02:38.795
Well, a rich collection of data types,
a read-eval-print loop, the notion

00:02:38.795 --> 00:02:43.334
of debugging a running program and
being able to easily inspect the data.

00:02:43.334 --> 00:02:47.563
Preference for lots of functions,
many without side effects,

00:02:47.562 --> 00:02:51.149
object orientation and
inheritance if you want it.

00:02:51.150 --> 00:02:55.950
All these things were unique to Lisp,
but now they're in most languages.

00:02:55.949 --> 00:02:59.030
&gt;&gt; I think the one thing that hasn't
caught on in other languages was

00:02:59.030 --> 00:03:01.310
the ability to define rich macros.

00:03:01.310 --> 00:03:03.814
Some languages have
a limited macro capability.

00:03:03.814 --> 00:03:06.039
Lisp really went much farther.

00:03:06.039 --> 00:03:08.629
But that hasn't moved into
current date languages yet.

00:03:08.629 --> 00:03:11.829
&gt;&gt; So when we first talked about my
preparing this course, you convinced me

00:03:11.830 --> 00:03:15.910
to use Python for the assignments,
a language I didn't know at the time.

00:03:15.909 --> 00:03:19.247
Why do you think Python is good for
teaching this course?

00:03:19.247 --> 00:03:21.989
&gt;&gt; Well, when Stuart and I wrote
the book, we didn't want to impose

00:03:21.990 --> 00:03:24.810
a programming language choice
on the reader or the instructor.

00:03:24.810 --> 00:03:27.990
And so we just used a pseudo-code
in the algorithms in the book.

00:03:27.990 --> 00:03:31.540
We made up a format, and then we
provided Lisp implementations for

00:03:31.539 --> 00:03:32.269
the code online.

00:03:33.669 --> 00:03:36.043
Over time, fewer and
fewer students knew Lisp, so

00:03:36.044 --> 00:03:38.651
I decided I would have to
rewrite the code in a language.

00:03:38.651 --> 00:03:42.560
And I wanted one that would be as
close to the pseudo-code as possible,

00:03:42.560 --> 00:03:45.990
popular enough that many
students would know it.

00:03:45.990 --> 00:03:48.046
And easy enough so
that if a student didn't know it,

00:03:48.045 --> 00:03:50.489
they'd still be able to understand
it and pick it up quickly.

00:03:50.490 --> 00:03:52.840
And so I surveyed all the languages, and

00:03:52.840 --> 00:03:56.080
Python seemed to be by
far the best choice.

00:03:56.080 --> 00:04:00.230
Somehow, Guido and we were in sync.

00:04:00.229 --> 00:04:02.930
And we thought of the same pseudo-code,
more or less,

00:04:02.931 --> 00:04:05.230
as he thought of as a language.

00:04:05.229 --> 00:04:06.590
And so that worked out well.

00:04:06.590 --> 00:04:07.319
&gt;&gt; Cool, thank you.

