WEBVTT
Kind: captions
Language: en

00:00:00.580 --> 00:00:02.069
Let's return to this equation,

00:00:02.069 --> 00:00:05.009
which we used to show how to
do inference by enumeration.

00:00:05.009 --> 00:00:09.399
In this equation we join up
the whole joint distribution

00:00:09.400 --> 00:00:12.240
before we sum out over
the hidden variables.

00:00:12.240 --> 00:00:15.530
That's slow, because we end
up repeating a lot of work.

00:00:15.529 --> 00:00:18.199
Now we're going to show
a new technique called

00:00:18.199 --> 00:00:22.030
variable elimination which in many
networks operates much faster.

00:00:22.030 --> 00:00:24.495
It's still a difficult computation and

00:00:24.495 --> 00:00:28.089
a bit hard computation to do
inference over Bayes nets in general.

00:00:28.089 --> 00:00:32.079
Variable elimination works faster
than inference by enumeration

00:00:32.079 --> 00:00:33.769
in most practical cases.

00:00:33.770 --> 00:00:38.440
It requires an algebra for manipulating
factors, which are just names for

00:00:38.439 --> 00:00:43.219
multidimensional arrays that come
out of these probabilistic terms.

00:00:43.219 --> 00:00:46.622
We'll use another example to show
how variable elimination works.

00:00:46.622 --> 00:00:49.743
We'll start off with a network
that has three boolean variables.

00:00:49.743 --> 00:00:52.130
R indicates whether or not it's raining.

00:00:52.130 --> 00:00:54.750
T indicates whether or
not there's traffic.

00:00:54.750 --> 00:00:56.979
And T is dependent on
whether it's raining.

00:00:56.979 --> 00:01:01.006
And finally L indicates whether or not
I'll be late for my next appointment and

00:01:01.006 --> 00:01:03.570
that depends on whether or
not there's traffic.

00:01:03.570 --> 00:01:06.769
Now,we'll put up the conditional
probability tables for

00:01:06.769 --> 00:01:08.500
each of these three variables.

00:01:08.501 --> 00:01:13.416
And then we can use inference to
figure out answer to questions like

00:01:13.415 --> 00:01:14.832
am I going to be late?

00:01:14.832 --> 00:01:19.438
And we know by definition that we
could do that through enumeration

00:01:19.438 --> 00:01:23.305
by going through all the possible
values for r and t, and

00:01:23.305 --> 00:01:26.450
summing up the product
of these three nodes.

00:01:26.450 --> 00:01:30.990
Now in a simple network like this,
straight enumeration would work fine.

00:01:30.989 --> 00:01:35.719
But in a more complex network, what
variable elimination does is give us

00:01:35.719 --> 00:01:40.859
a way to combine together parts of
the network into smaller parts, and

00:01:40.859 --> 00:01:44.950
then enumerate over those smaller parts
and then continue combining them.

00:01:44.950 --> 00:01:49.140
So we start with a big network,
we eliminate some of the variables,

00:01:49.140 --> 00:01:54.402
we compute by marginalizing out and then
we have a smaller network to deal with.

00:01:54.402 --> 00:01:56.840
And we'll show you how
those two steps work.

00:01:56.840 --> 00:02:01.350
The first operation in variable
elimination is called joining factors.

00:02:01.349 --> 00:02:06.019
A factor again is one of these tables,
it's a multi dimensional matrix.

00:02:06.019 --> 00:02:09.000
And what we do is choose
two of the factors, two or

00:02:09.000 --> 00:02:12.055
more of the factors,
in this case we'll choose these two.

00:02:12.055 --> 00:02:17.120
And we'll combine them together to
form a new factor which represents

00:02:17.120 --> 00:02:20.960
the joint probability of all
the variables in that factor.

00:02:20.960 --> 00:02:22.469
In this case, R and T.

00:02:22.469 --> 00:02:24.930
Now we'll draw that table.

00:02:24.930 --> 00:02:27.960
In each case, we just look up
in the corresponding table,

00:02:27.960 --> 00:02:30.250
figure out the numbers, and
multiply them together.

00:02:30.250 --> 00:02:33.722
For example, in this row,
we have a +r and a +t.

00:02:33.722 --> 00:02:38.719
So the +r is 0.1 and the entry for
+r and +t is 0.8, so

00:02:38.719 --> 00:02:42.554
multiply them together and you get 0.08.

00:02:42.554 --> 00:02:48.187
Go all the way down for
example in the last row we have a -r and

00:02:48.187 --> 00:02:50.338
a -t, -r is 0.9.

00:02:50.338 --> 00:02:54.640
The entry for -r and -t is also 0.9.

00:02:54.640 --> 00:02:58.250
Multiply those together and
you get 0.81.

00:02:58.250 --> 00:02:59.460
So what have we done?

00:02:59.460 --> 00:03:03.918
We used the operation of joining factors
of these two factors giving us a new

00:03:03.918 --> 00:03:06.700
factor which is part of
the existing network.

00:03:06.699 --> 00:03:11.820
Now we want to apply a second operation
called elimination, also called

00:03:11.820 --> 00:03:16.701
summing out or marginalization,
to take this table and reduce it.

00:03:16.701 --> 00:03:20.289
Right now the tables we
have look like this.

00:03:20.289 --> 00:03:22.239
We can sum, out or marginalize,

00:03:22.240 --> 00:03:26.610
over the variable r to give us
a table that just operates on t.

00:03:26.610 --> 00:03:30.020
So the question is to fill
in this table for P(T).

00:03:30.020 --> 00:03:34.520
There will be two entries in this table,
the +t entry formed by summing out

00:03:34.520 --> 00:03:38.365
all the entries here for
all values of r for which t is positive.

00:03:38.365 --> 00:03:42.308
And the -t entry formed the same way,
by looking in this table and

00:03:42.307 --> 00:03:46.263
summing up all the rows, over all
values of r where T is negative.

00:03:46.264 --> 00:03:48.675
Put your answers in these boxes.

00:03:48.675 --> 00:03:58.675
[BLANK_AUDIO]

