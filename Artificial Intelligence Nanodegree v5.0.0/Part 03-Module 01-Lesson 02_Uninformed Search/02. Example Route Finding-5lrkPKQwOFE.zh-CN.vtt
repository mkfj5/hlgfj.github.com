WEBVTT
Kind: captions
Language: zh-CN

00:00:00.280 --> 00:00:02.849
现在 让我们来看看之前定义的问题

00:00:02.850 --> 00:00:05.679
该如何映射到路线规划领域

00:00:05.679 --> 00:00:10.489
首页 我们被给定一个初始状态 比如说 我们从 Arad 出发

00:00:10.490 --> 00:00:13.630
然后 关于 goal test

00:00:13.630 --> 00:00:18.969
在这里就是到达 Bucharest 这个状态 也是唯一目标状态

00:00:18.969 --> 00:00:20.759
其它所有状态都不是目标

00:00:20.760 --> 00:00:25.250
现在 所有状态的集合就是我们所说的状态空间

00:00:25.250 --> 00:00:29.280
并且 我们通过应用行为 (Actions) 来操纵状态空间

00:00:29.280 --> 00:00:33.399
每个城市对应的行为都是特定的 所以 当我们在 Arad 的时候

00:00:33.399 --> 00:00:38.759
这里有三个可行的行动 沿着这条路 这条 或者是这一条

00:00:38.759 --> 00:00:43.369
这之后 我们就产生了路径 或是一系列行动

00:00:43.369 --> 00:00:46.939
所以 仅仅在 Arad 的时候 路径的长度为 0

00:00:46.939 --> 00:00:50.419
现在 我们可以开始探索状态空间

00:00:50.420 --> 00:00:54.730
加入这条长度为 1 的路径 

00:00:54.729 --> 00:00:59.729
这条长度为 1 的路径和这一条长度为 1 的路径

00:00:59.729 --> 00:01:06.979
我们可以添加另一条长度为 2 的路径 还有另一条长度为 2 的路径

00:01:06.980 --> 00:01:11.853
这是另一条长度为 2 的路径

00:01:11.852 --> 00:01:17.429
这条长度为 3 另一条长度为 2 的路径 以此类推

00:01:17.430 --> 00:01:24.170
现在 在每一个点 我们都想把状态分为三个部分

00:01:24.170 --> 00:01:28.070
首先 在路径的尾端 路径的最远处

00:01:28.069 --> 00:01:31.179
那些已经被查询过的节点 我们称之为边界 (frontier)

00:01:31.180 --> 00:01:33.770
所以 在这个情景中 这些边界

00:01:33.769 --> 00:01:39.280
由我们已经探寻过的 最靠外的状态组成

00:01:39.280 --> 00:01:43.099
然后 在这张图表这些边界的左边

00:01:43.099 --> 00:01:46.030
有我们已经搜索过的状态

00:01:46.030 --> 00:01:49.159
向右 则是我们未搜索过的状态

00:01:49.159 --> 00:01:52.050
所以 让我们写下这三个组成部分

00:01:55.500 --> 00:01:58.629
我们有边界 (Frontier) 我们有未探索区域 (Unexplored region)

00:01:58.629 --> 00:02:00.310
我们还有探索过的区域 (Explored region)

00:02:01.569 --> 00:02:03.099
还有一件事

00:02:03.099 --> 00:02:08.439
在图中 我们已经标记出沿路每一个行动 (action) 的开销

00:02:08.439 --> 00:02:12.064
所以 Neamt 和 Lasi 之间的开销是 87

00:02:12.064 --> 00:02:18.139
也就是 87 千米

00:02:18.139 --> 00:02:22.179
然后 路径开销 (Path Cost) 就是每一步开销 (Step Cost) 的和

00:02:22.180 --> 00:02:28.453
所以 从 Arad 到 Oradea 的开销是 71 + 75

