WEBVTT
Kind: captions
Language: en

00:00:00.410 --> 00:00:03.100
Now, why doesn't
the general tree search or

00:00:03.100 --> 00:00:07.859
graph search algorithm stop when it
adds a goal node to the Frontier?

00:00:07.860 --> 00:00:11.323
The reason is because it might
not be the best path to the goal.

00:00:11.323 --> 00:00:13.609
Now here we found a path of length 2.

00:00:13.609 --> 00:00:18.722
And we added a path of length
3 that reached the goal.

00:00:18.722 --> 00:00:23.532
The general graph search or tree search
doesn't know that there might be some

00:00:23.532 --> 00:00:27.897
other path that we could expand that
would have a distance of say two and

00:00:27.897 --> 00:00:28.425
a half.

00:00:28.425 --> 00:00:30.692
But there's an optimization
that could be made.

00:00:30.692 --> 00:00:34.790
If we know we're doing breadth-first
search and we know there's no

00:00:34.790 --> 00:00:39.453
possibility of a path of length two and
a half, then we can change the algorithm

00:00:39.454 --> 00:00:43.430
so that it checks states as soon
as they're added to the frontier.

00:00:43.430 --> 00:00:45.856
Rather than waiting
until they're expanded.

00:00:45.856 --> 00:00:49.439
And in that case, we can write
a specific breadth-first search

00:00:49.439 --> 00:00:51.187
routine that terminates early.

00:00:51.188 --> 00:00:56.484
And gives us the result as soon as
we add a goal state to the Frontier.

00:00:56.484 --> 00:01:02.329
Breadth-first search will find this
path that ends up in Bucharest.

00:01:02.329 --> 00:01:06.230
And if we're looking for the shortest
path in terms of number of steps,

00:01:06.230 --> 00:01:08.971
breadth-first search is
guaranteed to find it.

00:01:08.971 --> 00:01:13.737
But if we're looking for
the shortest path in terms of total

00:01:13.736 --> 00:01:18.500
cost by adding up the step costs,
then it turns out that this

00:01:18.500 --> 00:01:23.590
path is shorter than the path
found by breadth-first search.

00:01:23.590 --> 00:01:25.340
So let's look at how we
could find that path

