{
  "id": 1791,
  "project_id": 420,
  "upload_types": [
    "zip"
  ],
  "file_filter_regex": "\\A(?!(((.*/)?(__MACOSX|\\.git|node_modules|bower_components|jspm_packages|\\.idea|build|.ipynb_checkpoints|\\.Trash-0|logs)(\\Z|/))))((.*\\.(css|docx|gradle|htm|html|java|js|markdown|md|pdf|py|rmd|rst|sql|swift|txt|xml|yaml|yml)\\Z)|((.*/)?(README|Readme|readme|Makefile)\\Z))",
  "nomination_eligible": false,
  "stand_out": "",
  "hide_criteria": false,
  "created_at": "2018-04-04T20:53:39.388Z",
  "updated_at": "2020-03-12T00:58:12.921Z",
  "hashtag": "",
  "max_upload_size_mb": 500,
  "estimated_sla": null,
  "project_assistant_enabled": true,
  "available_for_cert_project": false,
  "language": "en-us",
  "ndkeys": [
    "nd898",
    "nd898-ent",
    "nd898-ent-airbus",
    "nd898-beta"
  ],
  "coursekeys": [],
  "is_career": false,
  "sections": [
    {
      "id": 3643,
      "name": "Solver Functionality",
      "created_at": "2018-04-10T17:40:44.480Z",
      "updated_at": "2018-04-10T17:41:24.548Z",
      "deleted_at": null,
      "position": 0,
      "rubric_id": 1791,
      "rubric_items": [
        {
          "id": 10687,
          "section_id": 3643,
          "passed_description": "(AUTOGRADED) The student correctly uses constraint propagation to solve the naked twins problem by enforcing the constraint that no squares outside the two naked twins squares can contain the twin values.",
          "exceeded_description": "",
          "created_at": "2018-04-10T17:41:24.826Z",
          "updated_at": "2018-05-14T20:27:40.693Z",
          "deleted_at": null,
          "optional": false,
          "position": 0,
          "criteria": "Naked twins implemented correctly.",
          "exceedable": false
        },
        {
          "id": 10688,
          "section_id": 3643,
          "passed_description": "(AUTOGRADED) The student correctly solves the diagonal sudoku using constraint propagation by adding the new constraint of the diagonal sudoku.",
          "exceeded_description": "",
          "created_at": "2018-04-10T17:41:56.652Z",
          "updated_at": "2018-05-14T20:27:40.706Z",
          "deleted_at": null,
          "optional": false,
          "position": 1,
          "criteria": "Diagonal Sudoku implemented correctly.",
          "exceedable": false
        }
      ]
    }
  ],
  "project": {
    "id": 420,
    "name": "Build a Sudoku Solver",
    "nanodegree_key": "nd898",
    "is_cert_project": false,
    "audit_project_id": null,
    "hashtag": null,
    "audit_rubric_id": 2899,
    "entitlement_required": null,
    "is_career": null,
    "recruitment_family_id": 1,
    "created_at": "2018-03-13T19:58:13.154Z",
    "updated_at": "2021-03-27T03:29:07.112Z",
    "price": "8.0",
    "ungradeable_price": "3.0",
    "audit_price": "0.0"
  }
}