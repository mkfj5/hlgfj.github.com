WEBVTT
Kind: captions
Language: en

00:00:00.560 --> 00:00:05.019
Now there's one more type of search for
plans that we can do with the classical

00:00:05.019 --> 00:00:08.070
planning language that
we couldn't do before.

00:00:08.070 --> 00:00:10.679
And this is,
searching through the space of

00:00:10.679 --> 00:00:14.769
plans rather than searching
through the space of states.

00:00:14.769 --> 00:00:18.405
In forward search, we were searching
through concrete world states.

00:00:18.405 --> 00:00:21.339
In backward search,
we were searching through

00:00:21.339 --> 00:00:24.597
abstract states in which some of
the variables were unspecified.

00:00:24.597 --> 00:00:29.869
But in plans-based search,
we search through this base of plans.

00:00:29.870 --> 00:00:31.292
And here's how it works.

00:00:31.292 --> 00:00:33.448
We start off with an empty plan.

00:00:33.448 --> 00:00:35.439
We have the start state and

00:00:35.439 --> 00:00:38.789
the goal state and
that's all we know about the plan.

00:00:38.789 --> 00:00:40.984
So obviously this plan is flawed,

00:00:40.984 --> 00:00:43.945
it doesn't lead us from
the start to the goal.

00:00:43.945 --> 00:00:47.003
And then we say,
let's do an operation to edit or

00:00:47.003 --> 00:00:50.729
modify that plan by
adding something in new.

00:00:50.729 --> 00:00:53.875
And here we're tackling the problem
of how to get dressed and

00:00:53.875 --> 00:00:56.041
put on all the clothes
in the right order.

00:00:56.042 --> 00:00:58.634
So we say,
out of all the operators we have,

00:00:58.634 --> 00:01:02.039
we could add one of those
operators into the plan.

00:01:02.039 --> 00:01:06.340
So here we say, well what if we added
the put on right shoe operator?

00:01:06.340 --> 00:01:08.746
Then we end up with this plan.

00:01:08.746 --> 00:01:10.909
That still doesn't solve the problem.

00:01:10.909 --> 00:01:13.409
So we need to keep refining that plan.

00:01:13.409 --> 00:01:15.369
Then we come here and say,

00:01:15.370 --> 00:01:20.500
well maybe we could add in
the put on left shoe operator.

00:01:20.500 --> 00:01:24.730
And here I've shown the plan as a
parallel branching structure rather than

00:01:24.730 --> 00:01:26.430
just as a sequence.

00:01:26.430 --> 00:01:28.250
And that's a useful thing to do,

00:01:28.250 --> 00:01:32.849
because it captures the fact these
can be done in either order.

00:01:32.849 --> 00:01:37.369
And we will keep refining like that,
adding on new branches or

00:01:37.370 --> 00:01:41.569
new operators into the plan, until we
got a plan that was guaranteed to work.

00:01:42.640 --> 00:01:47.879
Now this approach was popular in the
1980s, but it's faded from popularity.

00:01:47.879 --> 00:01:52.929
Right now, the most popular approaches
have to do with forward search.

00:01:52.930 --> 00:01:55.070
Now we saw some of the advantages
of backward search.

00:01:55.069 --> 00:01:57.779
The advantage of forward
search seems to be

00:01:57.780 --> 00:01:59.859
that we can come up with
very good heuristics.

00:01:59.859 --> 00:02:01.340
So we can do heuristics search and

00:02:01.340 --> 00:02:06.100
we saw how important it was to have
good heuristics to do heuristic search.

00:02:06.099 --> 00:02:09.978
And because the forward search
deals with concrete plan states,

00:02:09.979 --> 00:02:12.430
it seems to be easier to come
up with good heuristics.
最新课程跟课件还有一对一辅导请加wx：udacity6

