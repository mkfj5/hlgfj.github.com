WEBVTT
Kind: captions
Language: zh-CN

00:00:00.230 --> 00:00:03.399
现在我们回到真空世界两个地点

00:00:03.399 --> 00:00:05.500
用一阶逻辑进行表示

00:00:05.500 --> 00:00:07.929
那么首先我们添加地点

00:00:07.929 --> 00:00:12.859
例如左侧地点 A 右侧地点 B

00:00:12.859 --> 00:00:16.410
真空 V

00:00:16.410 --> 00:00:21.170
垃圾 D1 和 D2

00:00:21.170 --> 00:00:28.429
然后我们得到关系 关系 Loc 在任何地点均为真

00:00:28.429 --> 00:00:31.219
Vacuum 只在真空下为真

00:00:32.298 --> 00:00:34.850
Dirt 在有垃圾时为真

00:00:34.850 --> 00:00:40.689
At 是指对象和地点为真

00:00:40.689 --> 00:00:45.030
所以如果说地点 A 为真空

00:00:45.030 --> 00:00:50.049
那么可以用 At (V,A)

00:00:50.049 --> 00:00:53.199
如果说任何地点都没有垃圾

00:00:53.200 --> 00:00:54.990
那么会有点更加复杂

00:00:56.079 --> 00:01:00.589
我们可以说 ∀d ∀l

00:01:00.590 --> 00:01:06.540
Dirt (d) ∧ Loc (l) ⇒

00:01:06.540 --> 00:01:10.500
At (d,l)

00:01:10.500 --> 00:01:14.459
那么就可以说任何地点都没有垃圾

00:01:14.459 --> 00:01:19.067
现在需要注意的是 如果有 1,000 个地点 而不是只有两个

00:01:19.067 --> 00:01:21.829
这个语句仍然成立

00:01:21.829 --> 00:01:24.620
这就是一阶逻辑中的神奇所在

00:01:24.620 --> 00:01:27.030
我们可以继续尝试更多例子

00:01:27.030 --> 00:01:30.293
如果说真空位于有垃圾的地点

00:01:30.293 --> 00:01:34.838
但没有指明哪个地点 我可以这样做

00:01:34.838 --> 00:01:38.564
可以说 ∃l  ∃d

00:01:38.564 --> 00:01:43.533
Dirt (d) ∧ Loc (l)

00:01:43.533 --> 00:01:49.468
∧ At (V,l)

00:01:49.468 --> 00:01:53.900
∧ At (d,l)

00:01:53.900 --> 00:01:56.679
这就是一阶逻辑中的神奇所在

00:01:56.680 --> 00:02:01.250
最后你可能会问一阶逻辑是什么含义

00:02:01.250 --> 00:02:05.150
一阶逻辑表示关系在对象上

00:02:05.150 --> 00:02:08.206
而不是关系上 那是高阶逻辑

00:02:08.206 --> 00:02:11.099
在高阶逻辑中 我们可以说

00:02:11.099 --> 00:02:15.879
定义传递关系的概念 讨论关系本身

00:02:17.120 --> 00:02:21.512
例如我们可以说 ∀ R

00:02:21.512 --> 00:02:27.002
Transitive (R) ⇔

00:02:27.002 --> 00:02:29.752
(∀ a, b, c

00:02:29.752 --> 00:02:36.206
R (a, b) ∧ R(b,c)

00:02:36.205 --> 00:02:41.750
⇒ R(a,c))

00:02:41.750 --> 00:02:46.180
这是高阶逻辑定义

00:02:46.180 --> 00:02:48.438
传递关系概念的有效语句

00:02:48.437 --> 00:02:51.250
但这在一阶逻辑中是无效的

