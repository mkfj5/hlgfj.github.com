WEBVTT
Kind: captions
Language: zh-CN

00:00:00.900 --> 00:00:04.270
现在我们来讨论一阶逻辑的语法

00:00:04.269 --> 00:00:07.379
与命题逻辑一样 我们有语句

00:00:07.379 --> 00:00:09.560
描述真或假的事实

00:00:10.619 --> 00:00:17.239
但是与命题逻辑不同 我们也有些描述对象的项

00:00:17.239 --> 00:00:22.519
原子语句是关系对应的谓词

00:00:22.519 --> 00:00:27.992
例如我们可以说 Vowel (A) 是原子语句

00:00:27.992 --> 00:00:32.277
或者 Above (A, B) 也是

00:00:32.277 --> 00:00:37.229
我们还有个特别的关系 即相等关系

00:00:37.229 --> 00:00:40.705
我们可以说 2 = 2

00:00:40.706 --> 00:00:45.800
相等关系通常存在于所有模型中

00:00:45.799 --> 00:00:51.339
语句通常由命题逻辑中的所有运算符组合起来

00:00:51.340 --> 00:00:58.800
包括 ∧ ∨ ¬⇒ ⇔ 和 ()

00:00:58.799 --> 00:01:07.109
表示对象的项通常是常量 如 A B 和 2

00:01:07.109 --> 00:01:11.933
也可以是变量 我们通常用小写字母 x 和 y

00:01:11.933 --> 00:01:17.912
也可以是函数 例如 number
of (A) 只是

00:01:17.912 --> 00:01:22.444
对表示同一个对象 1 的另一个名字或另一种表达

00:01:22.444 --> 00:01:27.010
至少是我们之前展现模型中的内容

00:01:27.010 --> 00:01:31.219
除了我们通过组合连接符得到语句 让一阶逻辑更加独特外

00:01:31.219 --> 00:01:36.280
还有一种更加复杂的语句

00:01:37.469 --> 00:01:40.150
这些是量词

00:01:40.150 --> 00:01:43.042
这里有两个量词

00:01:43.042 --> 00:01:43.677
对于全称量词

00:01:43.677 --> 00:01:49.350
我们使用 ∀ 后面是引出的变量

00:01:49.349 --> 00:01:54.103
对于存在量词 这里我们使用 ∃

00:01:54.103 --> 00:01:57.855
后面是引出的变量

00:01:57.855 --> 00:02:02.518
例如我们可以说 ∀ x

00:02:02.518 --> 00:02:08.270
∀ x Vowel (x) ⇒ Number of (x) = 1

00:02:08.270 --> 00:02:10.199
这是一阶逻辑中的有效语句

00:02:11.270 --> 00:02:15.665
或者我们可以说 ∃ x

00:02:15.665 --> 00:02:20.382
如 number of (x) = 2

00:02:20.382 --> 00:02:23.846
这就是说域内一些对象

00:02:23.846 --> 00:02:27.450
可以使用函数 number of 值为 2

00:02:27.449 --> 00:02:29.759
但是我们无法说明对象是什么

00:02:31.120 --> 00:02:37.848
另外需要提醒的是 有时候作为简写形式 我们会省略量词

00:02:37.848 --> 00:02:42.378
当我们这样做时 你可以只假设它表示 ∀

00:02:42.377 --> 00:02:45.119
这种省略可以看作一种捷径

00:02:45.120 --> 00:02:48.052
我应该说这些语句的形式比较典型

00:02:48.052 --> 00:02:50.810
你可以不断看到这些形式

00:02:50.810 --> 00:02:53.120
所以一般说来 无论何时我们使用

00:02:53.120 --> 00:02:57.650
全称量词 它可以匹配一个有条件的量词

00:02:57.650 --> 00:03:01.277
例如 Vowel (x) 推出 number of (x) = 1

00:03:01.276 --> 00:03:04.689
原因在于我们通常不会说明

00:03:04.689 --> 00:03:09.310
域内的每个对象 因为对象各不相同

00:03:09.310 --> 00:03:12.849
不过我们会说对象的某个特殊类型

00:03:12.849 --> 00:03:15.609
例如在这种情况下是原因

00:03:15.610 --> 00:03:21.970
另外一般来说我们存在一个 X 存在任何变量

00:03:21.969 --> 00:03:28.756
通常都与这样的形式匹配 而不是条件式

00:03:28.756 --> 00:03:32.569
因为我们只讨论想要描述的一个对象

