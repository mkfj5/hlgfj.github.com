WEBVTT
Kind: captions
Language: zh-CN

00:00:00.220 --> 00:00:02.920
所以我们要先讲哪个算法

00:00:02.919 --> 00:00:04.230
好解约束满足问题呢？

00:00:04.230 --> 00:00:06.259
当然是笨办法先了

00:00:06.259 --> 00:00:07.359
我是不问不行啊

00:00:07.360 --> 00:00:09.490
必要时我们再加点智能

00:00:09.490 --> 00:00:11.199
好 我们先进行简单搜索

00:00:11.199 --> 00:00:13.660
状态定义是到目前为止赋的值

00:00:13.660 --> 00:00:15.720
初始状态赋值为空

00:00:15.720 --> 00:00:18.320
首先 我们检查现有赋值是否为目标

00:00:18.320 --> 00:00:21.120
然后为某个尚未赋值的变量赋值

00:00:21.120 --> 00:00:22.960
同时要注意不与现有赋值冲突

00:00:22.960 --> 00:00:26.160
如果没有合法赋值 就称其无解

00:00:26.160 --> 00:00:28.660
这时我们需回到上一状态

00:00:28.660 --> 00:00:30.160
尝试另一种赋值

00:00:30.160 --> 00:00:32.539
我们不断进行递归 直到找出解

00:00:32.539 --> 00:00:35.500
或遍历所有可能赋值且所有赋值都报告失败

00:00:35.500 --> 00:00:38.740
我们来用一个例子具体讲讲这个算法

00:00:38.740 --> 00:00:39.370
好

00:00:39.369 --> 00:00:41.259
这是澳大利亚的地图

00:00:41.259 --> 00:00:43.724
我们先从西澳大利亚开始

00:00:43.725 --> 00:00:47.439
我们有三种颜色可选 橙色、绿色、蓝色

00:00:47.439 --> 00:00:48.659
我选橙色

00:00:48.659 --> 00:00:49.579
好

00:00:49.579 --> 00:00:51.939
接下来你想处理哪个部分？

00:00:51.939 --> 00:00:53.719
北领地吧

00:00:53.719 --> 00:00:54.310
好

00:00:54.310 --> 00:00:58.076
由于西澳大利亚用了橙色 那么北领地

00:00:58.076 --> 00:01:00.439
就剩两种颜色可选 绿色或蓝色

00:01:00.439 --> 00:01:01.649
我们选绿色吧

00:01:01.649 --> 00:01:06.349
好 接下来处理昆士兰 可以是橙色或蓝色

00:01:06.349 --> 00:01:07.559
选蓝色吧

00:01:07.560 --> 00:01:12.010
但我们现在有麻烦了 南澳大利亚没有颜色可选了

00:01:12.010 --> 00:01:15.450
好吧 看来无解了 我们回到上面 试试别的分支

00:01:15.450 --> 00:01:18.109
这一次我们只用了橙色和绿色

00:01:18.109 --> 00:01:20.489
这样我们终于找到了解

00:01:20.489 --> 00:01:23.059
但我们可以大幅提高算法的效率

