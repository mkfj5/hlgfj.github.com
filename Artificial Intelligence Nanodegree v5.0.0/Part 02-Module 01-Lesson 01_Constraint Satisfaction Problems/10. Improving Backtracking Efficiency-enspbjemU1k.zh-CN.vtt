WEBVTT
Kind: captions
Language: zh-CN

00:00:00.280 --> 00:00:02.559
我想我们已经看到了一种最优化方法

00:00:02.560 --> 00:00:04.200
怎么说？
 如果我选了

00:00:04.200 --> 00:00:07.130
最少约束值给昆士兰 那我们就不需要回溯了

00:00:08.800 --> 00:00:09.650
我给你做个示范

00:00:09.650 --> 00:00:12.009
先是西澳大利亚 涂橙色

00:00:12.009 --> 00:00:14.379
然后北领地是绿色

00:00:14.380 --> 00:00:18.080
由于昆士兰不与西澳大利亚毗邻 所以我可以再用橙色

00:00:18.079 --> 00:00:19.879
所以蓝色还没有用

00:00:19.879 --> 00:00:24.729
好 所以橙色这个值对我们未来的选择约束最少

00:00:24.730 --> 00:00:25.980
现在你知道我说什么了

00:00:25.980 --> 00:00:29.620
还有一种最优化方法是选择

00:00:29.620 --> 00:00:31.330
剩余值最少的下一个变量来赋值

00:00:31.329 --> 00:00:33.100
如果我们先为西澳大利亚赋值

00:00:33.100 --> 00:00:36.460
然后是北领地 那么剩余值最少的变量

00:00:36.460 --> 00:00:39.929
就是南澳大利亚 所以我们接下来要选它来赋值

00:00:39.929 --> 00:00:41.439
那如果遇到僵局呢？

00:00:41.439 --> 00:00:42.679
什么意思？

00:00:42.679 --> 00:00:47.229
在这个例子里 我们为南澳大利亚和北领地赋了值

00:00:47.229 --> 00:00:51.640
所以有两个地区只能赋橙色 即昆士兰

00:00:51.640 --> 00:00:53.329
和西澳大利亚

00:00:53.329 --> 00:00:54.739
我们要选哪一个呢？

00:00:54.740 --> 00:00:57.039
约束最多的那个

00:00:57.039 --> 00:01:01.359
你是说选昆士兰吧 因为它毗邻新南威尔士、

00:01:01.359 --> 00:01:04.379
北领地和南澳大利亚

00:01:05.530 --> 00:01:10.585
而西澳大利亚只与北领地和南澳大利亚毗邻

00:01:10.584 --> 00:01:11.544
没那么复杂

00:01:12.545 --> 00:01:15.534
选择未来约束更多的变量

00:01:15.534 --> 00:01:19.274
我们就能早些解决问题 而不用把问题延后处理

00:01:19.275 --> 00:01:20.135
对的

00:01:20.135 --> 00:01:23.590
好 这么优化回溯能提高多大的效率呢？

00:01:23.590 --> 00:01:25.350
还记得 n 皇后问题吗？

00:01:25.349 --> 00:01:26.239
恩

00:01:26.239 --> 00:01:29.459
那也是一种约束满足问题

00:01:29.459 --> 00:01:30.469
好吧

00:01:30.469 --> 00:01:32.200
使用最少约束值和

00:01:32.200 --> 00:01:35.840
最少剩余值启发式 优化后的回溯搜索

00:01:35.840 --> 00:01:38.020
能让我们处理千皇后问题

00:01:38.019 --> 00:01:39.769
我觉得要是靠我自己想可解决不了

00:01:39.769 --> 00:01:40.909
太震撼了

00:01:40.909 --> 00:01:41.840
这还只是冰山一角呢

