WEBVTT
Kind: captions
Language: zh-CN

00:00:00.300 --> 00:00:05.009
了解任务或问题的领域是设计智能系统的关键

00:00:05.009 --> 00:00:08.189
我们称这个领域为环境 并将智能系统或软件本身

00:00:08.189 --> 00:00:10.589
称为智能体

00:00:10.589 --> 00:00:12.609
— 比如 Roomba

00:00:12.609 --> 00:00:17.179
这是种自动真空吸尘器 能以一定的模式在房子里四处移动

00:00:17.179 --> 00:00:18.213
吸取灰尘

00:00:18.213 --> 00:00:22.007
它的环境就包括作业的房间或房子

00:00:22.007 --> 00:00:24.533
更具体地说是地板、墙壁

00:00:24.533 --> 00:00:28.843
以及所有吸尘器需要避开的、置于地板上的物体

00:00:28.843 --> 00:00:31.519
至于墙壁上的绘画则无关紧要

00:00:31.519 --> 00:00:33.359
那这样你觉得

00:00:33.359 --> 00:00:36.808
智能体是整个看得见摸得着的机器人本身

00:00:36.808 --> 00:00:40.039
还是只包括运行机器人的那个软件呢？

00:00:40.039 --> 00:00:41.750
问得好

00:00:41.750 --> 00:00:43.560
从笛卡尔的角度来看

00:00:43.560 --> 00:00:46.660
你可能只会将软件视为智能体

00:00:46.659 --> 00:00:49.359
至于整个硬件组成 包括感应器、

00:00:49.359 --> 00:00:53.119
马达都不属于智能体 是环境的一部分

00:00:53.119 --> 00:00:54.789
我完全同意这个观点

00:00:54.789 --> 00:00:57.871
我的手有时候就不受我控制

00:00:57.871 --> 00:00:58.476
如果我面前放了包薯片的话

00:00:58.476 --> 00:01:05.094
[空白音频]

00:01:05.094 --> 00:01:07.873
好了 虽然这么区分也行

00:01:07.873 --> 00:01:10.653
有利于分析 Roomba 内部的各种零件

00:01:10.653 --> 00:01:14.920
但总地来看 我会将整个机器人看作智能体

00:01:14.920 --> 00:01:18.030
我会把所有可直接访问或控制的、具备一定可靠性的部件

00:01:18.030 --> 00:01:20.019
都视为智能体

00:01:20.019 --> 00:01:22.849
也说得通 现在我们来想想 什么样的信息

00:01:22.849 --> 00:01:26.459
或状态是 Roomba 工作要储存的

00:01:26.459 --> 00:01:29.599
唔 有点像是井字游戏了

00:01:29.599 --> 00:01:32.949
Roomba 需要储存其现处位置

00:01:32.950 --> 00:01:34.900
以及清扫好的所有区域

00:01:34.900 --> 00:01:37.680
免得浪费时间打转

00:01:37.680 --> 00:01:42.070
将 Roomba 看到的所有障碍储存成一张地图也很有帮助

00:01:42.069 --> 00:01:45.629
不过随着时间变化 障碍可能会变动 所以信息会有所更改

00:01:45.629 --> 00:01:46.119
对的

00:01:46.120 --> 00:01:49.560
我们只标出那些所处状态与

00:01:49.560 --> 00:01:51.129
完成任务有关的物体即可

00:01:51.129 --> 00:01:54.069
至于那些不相关的事物 如你说的墙画位置

00:01:54.069 --> 00:01:56.359
则可不予考虑

00:01:56.359 --> 00:01:57.010
最后

00:01:57.010 --> 00:02:01.620
我们可以将智能体要实现的结果指定为目标状态

00:02:01.620 --> 00:02:04.090
注意 这可以是部分指定

00:02:04.090 --> 00:02:06.230
比如 在导航问题里

00:02:06.230 --> 00:02:10.219
我们可能需要边操作边记录定位

00:02:10.219 --> 00:02:13.069
但目标状态只需包括终点

00:02:14.099 --> 00:02:18.019
目标状态还可以是一系列不同的状态

00:02:18.020 --> 00:02:19.261
只要是合理目标皆可

00:02:19.260 --> 00:02:24.128
[空白音频]

