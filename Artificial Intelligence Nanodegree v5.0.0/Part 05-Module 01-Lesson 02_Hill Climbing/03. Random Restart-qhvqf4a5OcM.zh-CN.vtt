WEBVTT
Kind: captions
Language: zh-CN

00:00:00.150 --> 00:00:01.692
这次我从这里开始

00:00:01.693 --> 00:00:05.612
走左边 因为这边的梯度是正的

00:00:05.613 --> 00:00:08.440
所以我会抵达全局最大值

00:00:08.439 --> 00:00:10.959
但第二次就能到达全局最大值

00:00:10.960 --> 00:00:12.100
概率能有多大呢？

00:00:12.099 --> 00:00:13.949
比第一次就能到的概率大

00:00:13.949 --> 00:00:15.359
但我知道你的意思了

00:00:15.359 --> 00:00:18.689
我们是计算机科学家 有的是计算机电源可以烧

00:00:18.690 --> 00:00:22.859
我们可以多次随机重启、爬山、抵达局部峰值

00:00:22.859 --> 00:00:26.500
然后取整个操作期间的最大值

00:00:26.500 --> 00:00:29.679
那你怎么知道次数够不够呢？

00:00:29.679 --> 00:00:31.269
唔 就做很多次嘛

00:00:31.269 --> 00:00:35.390
虽然不高效 但如果样本接近无穷大 应该就可以了

00:00:35.390 --> 00:00:37.119
你可以提高一点效率的

00:00:37.119 --> 00:00:39.929
记录图里你曾到过的位置

00:00:39.929 --> 00:00:43.530
一旦回到同一个地方 就重启样本

00:00:43.530 --> 00:00:45.429
这个技巧称为禁忌搜索

00:00:45.429 --> 00:00:47.630
就是说你之前去过的地方都成了禁忌

00:00:49.149 --> 00:00:52.810
或者我也可以将所有局部最大值列成表

00:00:52.810 --> 00:00:56.039
试着得到问题的大致形状

00:00:56.039 --> 00:01:00.629
然后根据尚未探索的地方 预测新的最大值可能会在哪

00:01:00.630 --> 00:01:03.400
这听着像阶段算法的变体

00:01:03.399 --> 00:01:06.709
所以你是说 总地来说

00:01:06.709 --> 00:01:07.750
随机重启应该是个好办法？

00:01:07.750 --> 00:01:10.250
只要进行我们刚才说的那些改进就好了？

00:01:10.250 --> 00:01:10.760
对的

00:01:10.760 --> 00:01:12.560
根据目前所学的知识 我们来做做练习吧

