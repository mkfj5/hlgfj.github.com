WEBVTT
Kind: captions
Language: zh-CN

00:00:00.350 --> 00:00:03.140
那为什么不用大步长呢？

00:00:03.140 --> 00:00:04.490
有很多原因

00:00:04.490 --> 00:00:08.640
首先 如果步长太大 我们可能会彻底错过陡峭的山峰

00:00:08.640 --> 00:00:11.269
回到我们一开始的起点

00:00:11.269 --> 00:00:15.969
如果步长这么大 我就会错过这个本来想找的山峰

00:00:15.970 --> 00:00:18.810
开始攀爬下一座山

00:00:18.809 --> 00:00:21.919
这看着是很明显 但你不是说有几个原因吗

00:00:21.920 --> 00:00:22.650
其它原因呢？

00:00:22.649 --> 00:00:26.519
在某些情况下 算法可能会陷入无限循环

00:00:26.519 --> 00:00:27.850
永远终止不了

00:00:27.850 --> 00:00:30.740
比如说 看这个有全局最大值的山峰

00:00:30.739 --> 00:00:33.280
如果我从它左边开始 在山肩上方

00:00:33.280 --> 00:00:36.980
步长这么大 那我会跳到山峰的另一边

00:00:36.979 --> 00:00:39.559
这样一来 梯度就反过来了

00:00:39.560 --> 00:00:42.039
所以我会走回来时的方向

00:00:42.039 --> 00:00:43.880
抵达起点附近

00:00:43.880 --> 00:00:47.190
算法可能会来回震荡 但就是接近不了解

00:00:47.189 --> 00:00:49.829
可我们应该能很容易地在代码里查出这一点

00:00:49.829 --> 00:00:52.939
一旦发现有震荡现象 或许我们就可以改用小些的步长

00:00:52.939 --> 00:00:54.710
你说到了关键

00:00:54.710 --> 00:00:57.969
我们可以从大步长开始 然后慢慢减小步长

00:00:57.969 --> 00:01:00.609
这样要抵达全局最大值就更有保障了

00:01:00.609 --> 00:01:04.189
不过用模拟退火算法也能得到类似的结果

00:01:04.189 --> 00:01:06.659
该算法是本课程的重要概念

00:01:06.659 --> 00:01:07.469
在开始讲解之前

00:01:07.469 --> 00:01:09.939
我想先用这些爬山思路来做会实验

