{
  "data": {
    "lesson": {
      "id": 556676,
      "key": "ce940040-75bf-4797-bc5d-052c694fa6c6",
      "title": "Genetic Algorithms",
      "semantic_type": "Lesson",
      "is_public": true,
      "version": "1.0.0",
      "locale": "en-us",
      "summary": "Thad introduces another optimization technique: _Genetic Algorithms_, which uses a population of samples to make iterative improvements towards the goal.",
      "lesson_type": "Classroom",
      "display_workspace_project_only": false,
      "resources": {
        "files": [
          {
            "name": "Videos Zip File",
            "uri": "https://zips.udacity-data.com/ce940040-75bf-4797-bc5d-052c694fa6c6/556676/1538955135896/Genetic+Algorithms+Videos.zip"
          },
          {
            "name": "Transcripts Zip File",
            "uri": "https://zips.udacity-data.com/ce940040-75bf-4797-bc5d-052c694fa6c6/556676/1538955133053/Genetic+Algorithms+Subtitles.zip"
          }
        ],
        "google_plus_link": null,
        "career_resource_center_link": null,
        "coaching_appointments_link": null,
        "office_hours_link": null,
        "aws_provisioning_link": null
      },
      "project": null,
      "lab": null,
      "concepts": [
        {
          "id": 1094391,
          "key": "2665dc12-db51-40ef-a749-056939c36902",
          "title": "Lesson Overview",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "2665dc12-db51-40ef-a749-056939c36902",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 1094386,
              "key": "ec8ed85c-8c97-4bf1-9249-f5f3885d4655",
              "title": "Lesson Overview",
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "The last optimization algorithm covered in this course is **Genetic Algorithm (GA)**. This algorithm is inspired by Charles Darwin's natural selection theory. \n\nSteps in Genetic Algorithm:\n1. Initialize a **population** with a set of *k* randomly generated states.\n2. Evaluate the parent states according to the **fitness function**.\n2. Select two parent states and split the parents’ *chromosomes* to **crossover** a successor child and evaluate the children’s fitness values.\n3. With a small independent chance, **mutate** the children’s states to generate new children.\n4. Return states from the parents and children with the best fitness values.\n\nSimilar to the Hill-Climbing algorithm, GA’s fitness function will select states with higher values. In this lesson, we will solve the 8-Queens problem with the Genetic Algorithm.",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 194151,
          "key": "56394685680923",
          "title": "Representing n-Queens",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "56394685680923",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 193803,
              "key": "5639468568",
              "title": "Representing n-Queens",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": null,
              "video": {
                "youtube_id": "VBqBdzYLUkM",
                "china_cdn_id": "VBqBdzYLUkM.mp4"
              }
            }
          ]
        },
        {
          "id": 194152,
          "key": "56394685690923",
          "title": "8-Queens Representation",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "56394685690923",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 193807,
              "key": "5639468569",
              "title": "8-Queens Representation",
              "semantic_type": "QuizAtom",
              "is_public": true,
              "instructor_notes": "",
              "user_state": {
                "node_key": "5639468569",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "instruction": {
                "video": {
                  "youtube_id": "nQXoXE9QzOk",
                  "china_cdn_id": "nQXoXE9QzOk.mp4"
                },
                "text": null
              },
              "question": {
                "title": "8-Queens Representation",
                "alt_text": null,
                "background_image": "//lh3.googleusercontent.com/8CP-L4TuLWhke3UqwHoSN-xj0dSSW1XJUBCnAKsZUOYVs4ygNJte_C0wSRySgvVQvfX9wP_iuBO-Vqp8lDI=s0#w=1920&h=1080",
                "non_google_background_image": "https://s3.cn-north-1.amazonaws.com.cn/u-img/5639468569",
                "semantic_type": "ImageFormQuestion",
                "evaluation_id": "5639468571",
                "widgets": [
                  {
                    "group": null,
                    "initial_value": "",
                    "label": null,
                    "marker": "text1",
                    "model": "TextInputWidget",
                    "is_text_area": false,
                    "tabindex": null,
                    "placement": {
                      "height": 0.07538802660753881,
                      "width": 0.20074812967581046,
                      "x": 0.6724010286783042,
                      "y": 0.44217710643015523
                    }
                  }
                ]
              },
              "answer": {
                "text": null,
                "video": {
                  "youtube_id": "32WeJhtf7iQ",
                  "china_cdn_id": "32WeJhtf7iQ.mp4"
                }
              }
            }
          ]
        },
        {
          "id": 194039,
          "key": "56394685730923",
          "title": "Genetic Algorithms",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "56394685730923",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 193676,
              "key": "5639468573",
              "title": "Genetic Algorithms",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": null,
              "video": {
                "youtube_id": "shfJ18BewqM",
                "china_cdn_id": "shfJ18BewqM.mp4"
              }
            },
            {
              "id": 1094384,
              "key": "3038d7aa-f543-40d7-8d59-7b42013fc252",
              "title": "Genetic Algorithm",
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "In the N-Queen problem, the **fitness function** is the number of **non-attacking** pairs of queens. The maximum fitness value for this problem is 28 (= 8! / (8-2)!2!), a combination of *8 choose 2*, where 28 is all the possible combinations of pairing eight queens.\n\nThe first step is to compute the fitness function of the parents and sort them according to their fitness values. For example, the board `32752411` has five pairs of attacking queens. Therefore the fitness value is 23 (= 28 - 5). After we sort the parents according to their fitness values, we can *crossover* them to generate successors (children) as shown in the next video.",
              "instructor_notes": ""
            },
            {
              "id": 1094385,
              "key": "1aef72ad-c52f-4e09-8a63-b760c88c88a7",
              "title": "Parent Fitness Function",
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2020/November/5fa072fd_board-32752411/board-32752411.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/1aef72ad-c52f-4e09-8a63-b760c88c88a7",
              "caption": "Board state 32752411 with 5 pairs of attacking queens",
              "alt": "",
              "width": 227,
              "height": 227,
              "instructor_notes": null
            }
          ]
        },
        {
          "id": 193899,
          "key": "56394685740923",
          "title": "GA Crossover",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "56394685740923",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 193517,
              "key": "5639468574",
              "title": "GA Crossover",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": null,
              "video": {
                "youtube_id": "DZKcgbvXONI",
                "china_cdn_id": "DZKcgbvXONI.mp4"
              }
            },
            {
              "id": 1094389,
              "key": "7a53958f-0e1b-4fe5-ad70-173fb2daf44c",
              "title": "GA Crossover",
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "In this example, the instructor splits the parents’ 8-digit chromosomes into 3- and 5-digit to crossover the chromosomes as follows:\n1. The first parent state of `24748552` is split into `247` and `48552` chromosomes.\n2. The second parent state of `32752411` is split into `327` and `52411` chromosomes.\n3. The *crossover* will generate two offsprings:\n     - First child: `247` + `52411` \n     - Second child: `327` + `48552`\n4. Compute the fitness function of the children.\n\nPlease note that you can determine other splitting criteria. For example, you can split the parent’s chromosome by half. So, the board `24748552` can be halved into `2474` and `8552`.",
              "instructor_notes": ""
            },
            {
              "id": 1094388,
              "key": "e295c43c-93ed-496c-89f9-f522b3ebdd4b",
              "title": "GA Crossover",
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2020/November/5fa0733a_crossover/crossover.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/e295c43c-93ed-496c-89f9-f522b3ebdd4b",
              "caption": "GA Crossover",
              "alt": "",
              "width": 600,
              "height": 180,
              "instructor_notes": null
            }
          ]
        },
        {
          "id": 193900,
          "key": "56394685760923",
          "title": "GA Crossover Quiz",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "56394685760923",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 193520,
              "key": "5639468576",
              "title": "GA Crossover Quiz",
              "semantic_type": "QuizAtom",
              "is_public": true,
              "instructor_notes": "**Note**: Some other combinations are also possible, depending on how you select parents for the crossover.",
              "user_state": {
                "node_key": "5639468576",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "instruction": {
                "video": {
                  "youtube_id": "ANkdXwDPmYU",
                  "china_cdn_id": "ANkdXwDPmYU.mp4"
                },
                "text": null
              },
              "question": {
                "title": "GA Crossover Quiz",
                "alt_text": null,
                "background_image": "//lh3.googleusercontent.com/2iNJr1AS3CToumomIzvWpWT_tuc1qve7akiff5eS_aAzKBd8nz4zZMzn0uOQncpSa2Bg1a3-8o7bv1x09xc=s0#w=1920&h=1080",
                "non_google_background_image": "https://s3.cn-north-1.amazonaws.com.cn/u-img/5639468576",
                "semantic_type": "ImageFormQuestion",
                "evaluation_id": "5639468578",
                "widgets": [
                  {
                    "group": null,
                    "initial_value": null,
                    "label": null,
                    "marker": "numeric1",
                    "model": "NumericInputWidget",
                    "is_text_area": null,
                    "tabindex": null,
                    "placement": {
                      "height": 0.082039911308204,
                      "width": 0.04488778054862843,
                      "x": 0.27217113466334164,
                      "y": 0.22682233924611975
                    }
                  },
                  {
                    "group": null,
                    "initial_value": null,
                    "label": null,
                    "marker": "numeric2",
                    "model": "NumericInputWidget",
                    "is_text_area": null,
                    "tabindex": null,
                    "placement": {
                      "height": 0.08425720620842572,
                      "width": 0.046134663341645885,
                      "x": 0.27238544264339154,
                      "y": 0.6229905764966741
                    }
                  },
                  {
                    "group": null,
                    "initial_value": null,
                    "label": null,
                    "marker": "numeric3",
                    "model": "NumericInputWidget",
                    "is_text_area": null,
                    "tabindex": null,
                    "placement": {
                      "height": 0.08425720620842572,
                      "width": 0.04738154613466334,
                      "x": 0.2707878740648379,
                      "y": 0.8091394124168514
                    }
                  },
                  {
                    "group": null,
                    "initial_value": "",
                    "label": null,
                    "marker": "text1",
                    "model": "TextInputWidget",
                    "is_text_area": false,
                    "tabindex": 1,
                    "placement": {
                      "height": 0.07095343680709534,
                      "width": 0.20199501246882792,
                      "x": 0.38228647132169574,
                      "y": 0.3441657427937916
                    }
                  },
                  {
                    "group": null,
                    "initial_value": "",
                    "label": null,
                    "marker": "text2",
                    "model": "TextInputWidget",
                    "is_text_area": false,
                    "tabindex": 2,
                    "placement": {
                      "height": 0.07095343680709534,
                      "width": 0.20074812967581046,
                      "x": 0.38353335411471323,
                      "y": 0.5325665188470067
                    }
                  },
                  {
                    "group": null,
                    "initial_value": "",
                    "label": null,
                    "marker": "text3",
                    "model": "TextInputWidget",
                    "is_text_area": false,
                    "tabindex": 3,
                    "placement": {
                      "height": 0.07095343680709534,
                      "width": 0.20199501246882792,
                      "x": 0.38154613466334164,
                      "y": 0.719650776053215
                    }
                  },
                  {
                    "group": null,
                    "initial_value": "",
                    "label": null,
                    "marker": "text4",
                    "model": "TextInputWidget",
                    "is_text_area": false,
                    "tabindex": 4,
                    "placement": {
                      "height": 0.07095343680709534,
                      "width": 0.09850374064837905,
                      "x": 0.6900327306733167,
                      "y": 0.3436807095343681
                    }
                  },
                  {
                    "group": null,
                    "initial_value": "",
                    "label": null,
                    "marker": "text5",
                    "model": "TextInputWidget",
                    "is_text_area": false,
                    "tabindex": 5,
                    "placement": {
                      "height": 0.07095343680709534,
                      "width": 0.10099750623441396,
                      "x": 0.7918095386533666,
                      "y": 0.34402716186252774
                    }
                  },
                  {
                    "group": null,
                    "initial_value": "",
                    "label": null,
                    "marker": "text6",
                    "model": "TextInputWidget",
                    "is_text_area": false,
                    "tabindex": 6,
                    "placement": {
                      "height": 0.07095343680709534,
                      "width": 0.09850374064837905,
                      "x": 0.6890586034912718,
                      "y": 0.5321161308203991
                    }
                  },
                  {
                    "group": null,
                    "initial_value": "",
                    "label": null,
                    "marker": "text7",
                    "model": "TextInputWidget",
                    "is_text_area": false,
                    "tabindex": 7,
                    "placement": {
                      "height": 0.07095343680709534,
                      "width": 0.09975062344139651,
                      "x": 0.7927057356608479,
                      "y": 0.5316657427937915
                    }
                  },
                  {
                    "group": null,
                    "initial_value": null,
                    "label": null,
                    "marker": "numeric4",
                    "model": "NumericInputWidget",
                    "is_text_area": null,
                    "tabindex": 8,
                    "placement": {
                      "height": 0.08869179600886919,
                      "width": 0.04738154613466334,
                      "x": 0.9096009975062345,
                      "y": 0.22214523281596452
                    }
                  },
                  {
                    "group": null,
                    "initial_value": null,
                    "label": null,
                    "marker": "numeric5",
                    "model": "NumericInputWidget",
                    "is_text_area": null,
                    "tabindex": 9,
                    "placement": {
                      "height": 0.08647450110864745,
                      "width": 0.048628428927680795,
                      "x": 0.9131468204488778,
                      "y": 0.6280834257206208
                    }
                  }
                ]
              },
              "answer": {
                "text": null,
                "video": {
                  "youtube_id": "uBJeuRTMk-M",
                  "china_cdn_id": "uBJeuRTMk-M.mp4"
                }
              }
            }
          ]
        },
        {
          "id": 193898,
          "key": "56394685750923",
          "title": "GA Mutation",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "56394685750923",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 193518,
              "key": "5639468575",
              "title": "GA Mutation",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": null,
              "video": {
                "youtube_id": "7ZX6Su2Xdi0",
                "china_cdn_id": "7ZX6Su2Xdi0.mp4"
              }
            },
            {
              "id": 1094387,
              "key": "be699279-38ba-46e3-bd43-0bdc3367f0f0",
              "title": "GA Mutation",
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "In the final *mutation* step, the algorithm will apply randomness to the children and generate additional children into the population. Instead of mutating the whole chromosome, the algorithm will just change the tiny bit in the chromosome. \n\nAdding randomness into Genetic Algorithm brings benefits in the crossover step. As we have seen in the previous video, the crossover exchanges large blocks of the parents to the children. A tiny mutation adds the granularity during the crossover operation. Similar to stochastic beam search, the mutation allows Genetic Algorithm to explore new states.",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 1094390,
          "key": "80a9c4f5-21f4-4eba-831d-bdbc1f9ca40b",
          "title": "Recap",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "80a9c4f5-21f4-4eba-831d-bdbc1f9ca40b",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 1094383,
              "key": "bb558068-bea9-4b06-b351-aa10242a568b",
              "title": "Recap",
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "This concludes the course on **Optimization Algorithms**. The optimization algorithms aim to find the best state according to their given objective functions. In this course, we learned three optimization algorithms. The algorithms are Hill Climbing, Simulated Annealing, and Genetic Algorithm.\n\nIn the intro lesson, we learned about `global maxima` and `local maxima` on the **state space landscape** and how the optimization algorithms may get stuck in the local maxima. However, adding randomness in the local search can help alleviate the problem.\n\nThe first optimization algorithm is **Hill Climbing**. This algorithm is also called *greedy local search* because it only looks at the immediate neighbors and moves to the new state with a higher value than the current state. However, this algorithm is prone to getting stuck in a local maximum.\n\nThe next algorithm, **Simulated Annealing**, alleviates the problem by allowing to accept the new state’s lower value at the early stage, as measured by *temperature*. Simulated Annealing algorithm is `complete` because it can find the global maximum and `efficient` because of the randomness in picking the next successor state. To expedite finding the global maximum, we can do *local beam search* where we can search *k* states at once and share the information among the parallel searches. A variant of beam search is *stochastic beam search* where the candidate successors are chosen at random.\n\nThe **Genetic Algorithm** is a variant of stochastic beam search where the successor states (the children) are generated by crossing-over two parents in a population. The objective function in Genetic Algorithm is called *fitness function*. Through *crossover* and *mutation* steps, the new population will be created from the parents in the original population. The algorithm will return the best state with the highest fitness function.",
              "instructor_notes": ""
            }
          ]
        }
      ]
    }
  },
  "_deprecated": [
    {
      "name": "non_google_background_image",
      "reason": "(2016/8/18) Not sure, ask i18n team for alternative"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_background_image",
      "reason": "(2016/8/18) Not sure, ask i18n team for alternative"
    }
  ]
}